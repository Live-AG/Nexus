&НаКлиенте
Перем мТипХЗ;


&НаСервере
Функция вПолучитьОбработку()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаСервереБезКонтекста
Функция вСкопироватьСтруктуру(Источник)
	Струк = новый Структура;
	
	Для каждого Элем из Источник Цикл
		Струк.Вставить(Элем.Ключ, Элем.Значение);
	КонецЦикла;
	
	Возврат Струк;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПутьКФормам = вПолучитьОбработку().Метаданные().ПолноеИмя() + ".Форма.";
	
	Если Параметры.Свойство("АдресаХранилищ") Тогда
		_АдресаХранилищ = вСкопироватьСтруктуру(Параметры.АдресаХранилищ);
	Иначе
		_АдресаХранилищ = новый Структура("ОбщиеРеквизиты");
		_АдресаХранилищ.ОбщиеРеквизиты = ПоместитьВоВременноеХранилище(-1, УникальныйИдентификатор);
	КонецЕсли;
	
	ДанныеХЗ = Параметры.ДанныеХЗ;
	
	Если ТипЗнч(ДанныеХЗ) = Тип("ТабличныйДокумент") Тогда
		_ДанныеДляОтображения = новый Структура("Значение, ТипЗначения", ДанныеХЗ, "ТабличныйДокумент");
		Возврат;
	ИначеЕсли ТипЗнч(ДанныеХЗ) = Тип("ТекстовыйДокумент") Тогда
		_ДанныеДляОтображения = новый Структура("Значение, ТипЗначения", ДанныеХЗ, "ТекстовыйДокумент");
		Возврат;
	ИначеЕсли ТипЗнч(ДанныеХЗ) <> Тип("ХранилищеЗначения") Тогда
		Отказ = истина;
		Возврат;
	КонецЕсли;
	
	
	ДанныеХЗ = Параметры.ДанныеХЗ.Получить();
	Если ДанныеХЗ = Неопределено Тогда
		Отказ = истина;
		Возврат;
	КонецЕсли;
	
	ТипДанныхХЗ = ТипЗнч(ДанныеХЗ);
	
	Если ТипДанныхХЗ = Тип("Массив") Тогда
		Заголовок = "Массив";
		Отказ = не вПоказатьМассив(ДанныеХЗ);
	ИначеЕсли ТипДанныхХЗ = Тип("Структура") Тогда
		Заголовок = "Структура";
		Отказ = не вПоказатьСтруктуру(ДанныеХЗ);
	ИначеЕсли ТипДанныхХЗ = Тип("Соответствие") Тогда
		Заголовок = "Соответствие";
		Отказ = не вПоказатьСоответствие(ДанныеХЗ);
	ИначеЕсли ТипДанныхХЗ = Тип("СписокЗначений") Тогда
		Заголовок = "СписокЗначений";
		Отказ = не вПоказатьСписокЗначений(ДанныеХЗ);
	ИначеЕсли ТипДанныхХЗ = Тип("ТаблицаЗначений") Тогда
		Заголовок = "ТаблицаЗначений";
		Отказ = не вПоказатьТаблицуЗначений(ДанныеХЗ);
	ИначеЕсли ТипДанныхХЗ = Тип("ДеревоЗначений") Тогда
		Заголовок = "ДеревоЗначений";
		Элементы._ТаблицаЗначений.Видимость = ложь;
		Элементы._ДеревоЗначений.Видимость = истина;
		Отказ = не вПоказатьДеревоЗначений(ДанныеХЗ);
	ИначеЕсли ТипДанныхХЗ = Тип("ТабличныйДокумент") Тогда
		_ДанныеДляОтображения = новый Структура("Значение, ТипЗначения", ДанныеХЗ, "ТабличныйДокумент");
	ИначеЕсли ТипДанныхХЗ = Тип("ТекстовыйДокумент") Тогда
		_ДанныеДляОтображения = новый Структура("Значение, ТипЗначения", ДанныеХЗ, "ТекстовыйДокумент");
	Иначе
		Отказ = истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	мТипХЗ = Тип("ХранилищеЗначения");
	
	Если _ДанныеДляОтображения <> Неопределено Тогда
		Если _ДанныеДляОтображения.ТипЗначения = "ТабличныйДокумент" Тогда
			_ДанныеДляОтображения.Значение.Показать(_ДанныеДляОтображения.ТипЗначения);
		ИначеЕсли _ДанныеДляОтображения.ТипЗначения = "ТекстовыйДокумент" Тогда
			_ДанныеДляОтображения.Значение.Показать(_ДанныеДляОтображения.ТипЗначения);
		КонецЕсли;
		
		Отказ = истина;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Функция вПоказатьМассив(ДанныеХЗ)
	Если ДанныеХЗ.Количество() = 0 Тогда
		Возврат ложь;
	КонецЕсли;
	
	РеквизитыКДобавлению = новый Массив;
	РеквизитыКУдалению = новый Массив;
	
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Индекс", новый ОписаниеТипов("Число"), "_ТаблицаЗначений", "Индекс", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Значение", новый ОписаниеТипов, "_ТаблицаЗначений", "Значение", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("ТипЗначения", новый ОписаниеТипов("Строка"), "_ТаблицаЗначений", "ТипЗначения", ложь));
	
	ИзменитьРеквизиты(РеквизитыКДобавлению,РеквизитыКУдалению);
	
	Для Инд = 0 по ДанныеХЗ.ВГраница() Цикл
		Значение = ДанныеХЗ[Инд];
		НС = _ТаблицаЗначений.Добавить();
		
		НС.Индекс = Инд;
		НС.ТипЗначения = Строка(ТипЗнч(Значение));
		
		Если вНадоПреобразоватьЗначение(Значение) Тогда
			НС.Значение = новый ХранилищеЗначения(Значение);
		Иначе
			НС.Значение = Значение;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Элем из РеквизитыКДобавлению Цикл
		ИмяЭФ = "_ТаблицаЗначений_" + Элем.Имя;
		ЭтаФорма.Элементы.Добавить(ИмяЭФ, Тип("ПолеФормы"), ЭтаФорма.Элементы._ТаблицаЗначений);
		ЭтаФорма.Элементы[ИмяЭФ].ПутьКДанным = "_ТаблицаЗначений."+Элем.Имя;
		ЭтаФорма.Элементы[ИмяЭФ].Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	
	Возврат истина;
КонецФункции

&НаСервере
Функция вПоказатьСтруктуру(ДанныеХЗ)
	Если ДанныеХЗ.Количество() = 0 Тогда
		Возврат ложь;
	КонецЕсли;
	
	РеквизитыКДобавлению = новый Массив;
	РеквизитыКУдалению = новый Массив;
	
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Ключ", новый ОписаниеТипов("Строка"), "_ТаблицаЗначений", "Ключ", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Значение", новый ОписаниеТипов, "_ТаблицаЗначений", "Значение", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("ТипЗначения", новый ОписаниеТипов("Строка"), "_ТаблицаЗначений", "ТипЗначения", ложь));
	
	ИзменитьРеквизиты(РеквизитыКДобавлению,РеквизитыКУдалению);
	
	Для каждого Элем из ДанныеХЗ Цикл
		НС = _ТаблицаЗначений.Добавить();
		
		ЗаполнитьЗначенияСвойств(НС, Элем,,"Значение");
		НС.ТипЗначения = Строка(ТипЗнч(Элем.Значение));
		
		Если вНадоПреобразоватьЗначение(Элем.Значение) Тогда
			НС.Значение = новый ХранилищеЗначения(Элем.Значение);
		Иначе
			НС.Значение = Элем.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Элем из РеквизитыКДобавлению Цикл
		ИмяЭФ = "_ТаблицаЗначений_" + Элем.Имя;
		ЭтаФорма.Элементы.Добавить(ИмяЭФ, Тип("ПолеФормы"), ЭтаФорма.Элементы._ТаблицаЗначений);
		ЭтаФорма.Элементы[ИмяЭФ].ПутьКДанным = "_ТаблицаЗначений."+Элем.Имя;
		ЭтаФорма.Элементы[ИмяЭФ].Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	
	Возврат истина;
КонецФункции

&НаСервере
Функция вПоказатьСоответствие(ДанныеХЗ)
	Если ДанныеХЗ.Количество() = 0 Тогда
		Возврат ложь;
	КонецЕсли;
	
	РеквизитыКДобавлению = новый Массив;
	РеквизитыКУдалению = новый Массив;
	
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Ключ", новый ОписаниеТипов, "_ТаблицаЗначений", "Ключ", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Значение", новый ОписаниеТипов, "_ТаблицаЗначений", "Значение", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("ТипЗначения", новый ОписаниеТипов("Строка"), "_ТаблицаЗначений", "ТипЗначения", ложь));
	
	ИзменитьРеквизиты(РеквизитыКДобавлению,РеквизитыКУдалению);
	
	Для каждого Элем из ДанныеХЗ Цикл
		НС = _ТаблицаЗначений.Добавить();
		
		ЗаполнитьЗначенияСвойств(НС, Элем,,"Значение");
		НС.ТипЗначения = Строка(ТипЗнч(Элем.Значение));
		
		Если вНадоПреобразоватьЗначение(Элем.Значение) Тогда
			НС.Значение = новый ХранилищеЗначения(Элем.Значение);
		Иначе
			НС.Значение = Элем.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Элем из РеквизитыКДобавлению Цикл
		ИмяЭФ = "_ТаблицаЗначений_" + Элем.Имя;
		ЭтаФорма.Элементы.Добавить(ИмяЭФ, Тип("ПолеФормы"), ЭтаФорма.Элементы._ТаблицаЗначений);
		ЭтаФорма.Элементы[ИмяЭФ].ПутьКДанным = "_ТаблицаЗначений."+Элем.Имя;
		ЭтаФорма.Элементы[ИмяЭФ].Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	
	Возврат истина;
КонецФункции

&НаСервере
Функция вПоказатьСписокЗначений(ДанныеХЗ)
	Если ДанныеХЗ.Количество() = 0 Тогда
		Возврат ложь;
	КонецЕсли;
	
	РеквизитыКДобавлению = новый Массив;
	РеквизитыКУдалению = новый Массив;
	
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Пометка", новый ОписаниеТипов("Булево"), "_ТаблицаЗначений", "Пометка", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Представление", новый ОписаниеТипов("Строка"), "_ТаблицаЗначений", "Представление", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("Значение", новый ОписаниеТипов, "_ТаблицаЗначений", "Значение", ложь));
	РеквизитыКДобавлению.Добавить(новый РеквизитФормы("ТипЗначения", новый ОписаниеТипов("Строка"), "_ТаблицаЗначений", "ТипЗначения", ложь));
	
	ИзменитьРеквизиты(РеквизитыКДобавлению,РеквизитыКУдалению);
	
	Для каждого Элем из ДанныеХЗ Цикл
		НС = _ТаблицаЗначений.Добавить();
		
		ЗаполнитьЗначенияСвойств(НС, Элем,,"Значение");
		НС.ТипЗначения = Строка(ТипЗнч(Элем.Значение));
		
		Если вНадоПреобразоватьЗначение(Элем.Значение) Тогда
			НС.Значение = новый ХранилищеЗначения(Элем.Значение);
		Иначе
			НС.Значение = Элем.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Элем из РеквизитыКДобавлению Цикл
		ИмяЭФ = "_ТаблицаЗначений_" + Элем.Имя;
		ЭтаФорма.Элементы.Добавить(ИмяЭФ, Тип("ПолеФормы"), ЭтаФорма.Элементы._ТаблицаЗначений);
		ЭтаФорма.Элементы[ИмяЭФ].ПутьКДанным = "_ТаблицаЗначений."+Элем.Имя;
		ЭтаФорма.Элементы[ИмяЭФ].Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	
	Возврат истина;
КонецФункции

&НаСервере
Функция вПоказатьТаблицуЗначений(ДанныеХЗ)
	РеквизитыКДобавлению = новый Массив;
	РеквизитыКУдалению = новый Массив;
	
	Для каждого Колонка из ДанныеХЗ.Колонки Цикл
		РеквизитыКДобавлению.Добавить(новый РеквизитФормы(Колонка.Имя, новый ОписаниеТипов, "_ТаблицаЗначений", Колонка.Заголовок, ложь));
	КонецЦикла;
	
	ИзменитьРеквизиты(РеквизитыКДобавлению,РеквизитыКУдалению);
	
	Для каждого Элем из ДанныеХЗ Цикл
		НС = _ТаблицаЗначений.Добавить();
		
		Для каждого Колонка из ДанныеХЗ.Колонки Цикл
			Значение = Элем[Колонка.Имя];
			
			Если вНадоПреобразоватьЗначение(Значение) Тогда
				Значение = новый ХранилищеЗначения(Значение);
			КонецЕсли;
			НС[Колонка.Имя] = Значение;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого Элем из РеквизитыКДобавлению Цикл
		ИмяЭФ = "_ТаблицаЗначений_" + Элем.Имя;
		ЭтаФорма.Элементы.Добавить(ИмяЭФ, Тип("ПолеФормы"), ЭтаФорма.Элементы._ТаблицаЗначений);
		ЭтаФорма.Элементы[ИмяЭФ].ПутьКДанным = "_ТаблицаЗначений."+Элем.Имя;
		ЭтаФорма.Элементы[ИмяЭФ].Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	
	Возврат истина;
КонецФункции

&НаСервере
Функция вПоказатьДеревоЗначений(ДанныеХЗ)
	РеквизитыКДобавлению = новый Массив;
	РеквизитыКУдалению = новый Массив;
	
	Для каждого Колонка из ДанныеХЗ.Колонки Цикл
		РеквизитыКДобавлению.Добавить(новый РеквизитФормы(Колонка.Имя, новый ОписаниеТипов, "_ДеревоЗначений", Колонка.Заголовок, ложь));
	КонецЦикла;
	
	ИзменитьРеквизиты(РеквизитыКДобавлению,РеквизитыКУдалению);
	
	вЗаполнитьУзелДЗ(_ДеревоЗначений, ДанныеХЗ, ДанныеХЗ.Колонки);
	
	Для каждого Элем из РеквизитыКДобавлению Цикл
		ИмяЭФ = "_ДеревоЗначений_" + Элем.Имя;
		ЭтаФорма.Элементы.Добавить(ИмяЭФ, Тип("ПолеФормы"), ЭтаФорма.Элементы._ДеревоЗначений);
		ЭтаФорма.Элементы[ИмяЭФ].ПутьКДанным = "_ДеревоЗначений."+Элем.Имя;
		ЭтаФорма.Элементы[ИмяЭФ].Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	
	Возврат истина;
КонецФункции

&НаСервере
Функция вЗаполнитьУзелДЗ(Знач Приемник, Знач Источник, Знач КоллекцияКолонок)
	Для каждого Элем из Источник.Строки Цикл
		НС = Приемник.ПолучитьЭлементы().Добавить();
		
		Для каждого Колонка из КоллекцияКолонок Цикл
			Значение = Элем[Колонка.Имя];
			
			Если вНадоПреобразоватьЗначение(Значение) Тогда
				Значение = новый ХранилищеЗначения(Значение);
			КонецЕсли;
			НС[Колонка.Имя] = Значение;
		КонецЦикла;
		
		вЗаполнитьУзелДЗ(НС, Элем, КоллекцияКолонок);
	КонецЦикла;
	
	Возврат истина;
КонецФункции



&НаКлиенте
Процедура ОткрытьОбъект(Команда)
	Значение = Неопределено;
	
	Имя = вПолучитьПутьКДаннымТекущегоЭлемента();
	Если не ЗначениеЗаполнено(Имя) Тогда
		Возврат;
	КонецЕсли;
	
	ЭФ = ЭтаФорма.ТекущийЭлемент;
	Если ТипЗнч(ЭФ) = Тип("ПолеФормы") Тогда
		Значение = ЭтаФорма[Имя];
	ИначеЕсли ТипЗнч(ЭФ) = Тип("ТаблицаФормы") Тогда
		ТекДанные = ЭФ.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Значение = ТекДанные[Имя];
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Значение) Тогда
		Если ТипЗнч(Значение) = мТипХЗ Тогда
			вПоказатьЗначениеХЗ(Значение);
			
		ИначеЕсли вЭтоОбъектМетаданных(ТипЗнч(Значение)) Тогда
			СтрукПарам = новый Структура("мОбъектСсылка, АдресаХранилищ", Значение, _АдресаХранилищ);
			ОткрытьФорму(ПутьКФормам + "ФормаОбъекта", СтрукПарам, ,Значение);
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура вПоказатьЗначениеХЗ(Значение)
	СтрукПарам = новый Структура("ДанныеХЗ", Значение);
	ОткрытьФорму(ПутьКФормам + "ФормаОтображенияХЗ", СтрукПарам, ,ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура _ТаблицаЗначенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ИмяКолонки = Сред(Поле.Имя, СтрДлина(Элемент.Имя) + 2);
		Значение = ТекДанные[ИмяКолонки];
		
		Если ТипЗнч(Значение) = мТипХЗ Тогда
			вПоказатьЗначениеХЗ(Значение);
		Иначе
			ПоказатьЗначение(, Значение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ДеревоЗначенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ИмяКолонки = Сред(Поле.Имя, СтрДлина(Элемент.Имя) + 2);
		Значение = ТекДанные[ИмяКолонки];
		
		Если ТипЗнч(Значение) = мТипХЗ Тогда
			вПоказатьЗначениеХЗ(Значение);
		Иначе
			ПоказатьЗначение(, Значение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция вПолучитьПутьКДаннымТекущегоЭлемента()
	ЭФ = ЭтаФорма.ТекущийЭлемент;
	Если ТипЗнч(ЭФ) = Тип("ТаблицаФормы") Тогда
		ТекПоле = ЭФ.ТекущийЭлемент;
		Если ТипЗнч(ТекПоле) = Тип("ПолеФормы") Тогда
			Значение = ТекПоле.ПутьКДанным;
			Поз = Найти(Значение, ".");
			Если Поз <> 0 Тогда
				Значение = Сред(Значение, Поз+1);
				Если Найти(Значение, ".") = 0 Тогда
					Возврат Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЭФ) = Тип("ПолеФормы") Тогда
		Возврат ЭФ.ПутьКДанным;
	КонецЕсли;
	
	Возврат "";
КонецФункции

&НаСервереБезКонтекста
Функция вЭтоОбъектМетаданных(Знач Тип)
	ОбъектМД = Метаданные.НайтиПоТипу(Тип);
	Возврат ( ОбъектМД <> Неопределено и не Метаданные.Перечисления.Содержит(ОбъектМД) );
КонецФункции

&НаСервереБезКонтекста
Функция вЭтоПростойТип(Знач Тип)
	Результат = Тип = Тип("Число")
		или Тип = Тип("Строка")
		или Тип = Тип("Булево")
		или Тип = Тип("Дата");
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция вНадоПреобразоватьЗначение(Знач Значение)
	Если Значение = Неопределено или Значение = NULL Тогда
		Возврат ложь;
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(Значение);
	
	Если вЭтоПростойТип(ТипЗначения) Тогда
		Возврат ложь;
	КонецЕсли;
	
	Если вЭтоОбъектМетаданных(ТипЗначения) Тогда
		Возврат ложь;
	КонецЕсли;
	
	Возврат (ТипЗначения <> Тип("ХранилищеЗначения"));
КонецФункции
