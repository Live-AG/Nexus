#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ТолстыйКлиентУправляемоеПриложение Или ВнешнееСоединение Тогда

Функция СведенияОВнешнейОбработке() Экспорт
	пСтрук = новый Структура("ДополнительныеОтчетыИОбработки, ДополнительныеОтчетыИОбработкиКлиентСервер");
	
	пТекст = "Проблемы с регистрацией внешней обработки!
	|Необходимо подправить функцию СведенияОВнешнейОбработке(...) в модуле объекта
	|в соответствии с текущей версией БСП";
	
	Попытка
		Для каждого Элем из пСтрук Цикл
			пСтрук[Элем.Ключ] = Вычислить(Элем.Ключ);
		КонецЦикла;
	Исключение
		ВызватьИсключение пТекст;
	КонецПопытки;
	
	пОписание = вСформироватьОписаниеРазработки();
	
	Попытка
		ПараметрыРегистрации = пСтрук.ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
		ПараметрыРегистрации.Вид = пСтрук.ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
		ПараметрыРегистрации.Версия = пОписание.НомерВерсии;
		ПараметрыРегистрации.БезопасныйРежим = ложь;
		
		Команда = ПараметрыРегистрации.Команды.Добавить();
		Команда.Представление = пОписание.Наименование;
		Команда.Идентификатор = "ВнешняяОбработка." + ЭтотОбъект.Метаданные().Имя;
		Команда.Использование = пСтрук.ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
		Команда.ПоказыватьОповещение = ложь;
	Исключение
		ВызватьИсключение пТекст;
	КонецПопытки;
	
	Возврат ПараметрыРегистрации; 
КонецФункции

Функция вСформироватьОписаниеРазработки() Экспорт
	пСтрук = новый Структура;
	пСтрук.Вставить("Наименование", "СДР: Консоль запросов");
	пСтрук.Вставить("НомерВерсии", "1.1.0.61");
	пСтрук.Вставить("ДатаВерсии", "26.08.2020");
	пСтрук.Вставить("Описание", "https://infostart.ru/public/938606/");
	
	Возврат пСтрук;
КонецФункции



Процедура вПодготовитьОбработку(Знач пРежим = 0) Экспорт
	
	пОбъектМД = ЭтотОбъект.Метаданные();
	
	ЭтотОбъект._ЭтоВстроеннаяОбработка = Метаданные.Обработки.Содержит(пОбъектМД);
	
	пХешированиеДанных = новый ХешированиеДанных(ХешФункция.CRC32);
	пХешированиеДанных.Добавить(СтрокаСоединенияИнформационнойБазы());
	пХешированиеДанных.Добавить(ИмяПользователя());
	
	Если пРежим = 1 Тогда
		пХешированиеДанных.Добавить(Строка(новый УникальныйИдентификатор));
	КонецЕсли;
	
	ЭтотОбъект._КлючСеанса = пХешированиеДанных.ХешСумма;
	ЭтотОбъект._РасширениеФайлаЗапроса = вРасширениеФайлаДляПерехватаЗапроса(_КлючСеанса);
	
	Если _ЭтоВстроеннаяОбработка Тогда
		ЭтотОбъект._ИмяФайлаОбработки = пОбъектМД.Имя;
	Иначе
		ЭтотОбъект._ИмяФайлаОбработки = ЭтотОбъект.ИспользуемоеИмяФайла;
	КонецЕсли;
	
	
КонецПроцедуры

Функция вРасширениеФайлаДляПерехватаЗапроса(пКлюч)
	Возврат Формат(пКлюч, "ЧГ=0") + "-dat";
КонецФункции

// Назначение: сохраняет объект запрос в файл или формирует XML-представление запроса для последующей отладки в консоли запросов
// Версия: 1.1.0.59 от 10.07.2020
// Параметры:
// пКлюч - ключ сеанса (формируется обработкой автоматически - изменять нельзя)
// пЗапрос - объект типа Запрос или МакетКомпоновкиДанных, для которого надо сохранить описание
// пСохранитьВФайл - истна или ложь
//     истина ... описание запроса сохраняется в файл на сервере, который затем можно подгрузить в консоль запросов
//     ложь ..... функция возвращает XML-представление запроса, которое можно через буфер обмена передать в консоль запросов
// МаксЧислоЗаписей - максимальное число записей, выгружаемых из каждой временной таблицы, при значении -1 выгружаются ВСЕ записи
// ВключатьВременныеТаблицы - если истина, то сохраняются временные таблицы из менеджера временных таблиц
//
// Пример вызова:
//    ВнешниеОбработки.Создать("C:\Users\USR1CV8\AppData\Local\Temp\СДРКонсольЗапросвХ-1.1.0.59.epf", ложь).вСохранитьЗапрос(2586257503, Запрос)
//    сохраняет описание запроса в файл на сервере, который затем можно подгрузить в консоль запросов
//
//    ВнешниеОбработки.Создать("C:\Users\USR1CV8\AppData\Local\Temp\СДРКонсольЗапросвХ-1.1.0.59.epf", ложь).вСохранитьЗапрос(2586257503, Запрос, ложь, 200)
//    возвращает XML-представление запроса (выгружаются не больше 200 записей из каждой временной таблицы)
// Замечания:
// - ВАЖНО: функцию надо вызывать ДО ВЫПОЛНЕНИЯ запроса
Функция вСохранитьЗапрос(Знач пКлюч, Знач пЗапрос, Знач пСохранитьВФайл = истина, Знач МаксЧислоЗаписей = -1, Знач СжиматьПараметрыXML = истина, Знач ВключатьВременныеТаблицы = истина) Экспорт
	
	Если пСохранитьВФайл Тогда
		пИмяФайла = ПолучитьИмяВременногоФайла(вРасширениеФайлаДляПерехватаЗапроса(пКлюч));
	Иначе
		пИмяФайла = Неопределено;
	КонецЕсли;
	
	Возврат СохранитьЗапросДляСДРКонсолиХ(пЗапрос, пИмяФайла, МаксЧислоЗаписей, СжиматьПараметрыXML, ВключатьВременныеТаблицы);
КонецФункции


// Назначение: сохраняет объект запрос в файл или формирует XML-представление запроса для последующей отладки в консоли запросов
// Версия: 1.1.0.59 от 10.07.2020
// Параметры:
// ЗапросИлиМакетКомпоновки - объект типа Запрос или МакетКомпоновкиДанных, для которого надо сохранить описание
// ИмяФайла - имя файла, куда будет сохранено описание запроса (можно без расширения)
//            этот файл затем можно подгрузить в расширенную консоль запросов
//     ВАЖНО: если ИмяФайла равно Неопределено, то функция возвращает XML-представление запроса, которое можно через буфер обмена передать в консоль запросов
// МаксЧислоЗаписей - максимальное число записей, выгружаемых из каждой временной таблицы, при значении -1 выгружаются ВСЕ записи
// ВключатьВременныеТаблицы - если истина, то сохраняются временные таблицы из менеджера временных таблиц
//
// Пример вызова:
//    _омОтладка.СохранитьЗапросДляСДРКонсолиХ(Запрос, "D:\1Cv8\Запросы\000") - сохраняет запрос в файл (НА СЕРВЕРЕ)
//    _омОтладка.СохранитьЗапросДляСДРКонсолиХ(Запрос) - возвращает XML-представление запроса
//    _омОтладка.СохранитьЗапросДляСДРКонсолиХ(Запрос,,200) - возвращает XML-представление запроса (выгружаются не больше 200 записей из каждой временной таблицы)
// Замечания:
// - ВАЖНО: функцию надо вызывать ДО ВЫПОЛНЕНИЯ запроса
// - в управляемом режиме выполняется на сервере, соответственно обращайте внимание на имя файла
Функция СохранитьЗапросДляСДРКонсолиХ(Знач ЗапросИлиМакетКомпоновки, Знач ИмяФайла = Неопределено, Знач МаксЧислоЗаписей = -1, Знач СжиматьПараметрыXML = истина, Знач ВключатьВременныеТаблицы = истина) Экспорт
	Если ТипЗнч(ЗапросИлиМакетКомпоновки) = Тип("МакетКомпоновкиДанных") Тогда
		ВключатьВременныеТаблицы = ложь;
		
		Запрос = новый Запрос(ЗапросИлиМакетКомпоновки.НаборыДанных.Получить(0).Запрос);
		Для каждого Элем из ЗапросИлиМакетКомпоновки.ЗначенияПараметров Цикл
			Запрос.Параметры.Вставить(Элем.Имя, Элем.Значение);
		КонецЦикла;
	ИначеЕсли ЗапросИлиМакетКомпоновки = Неопределено Тогда
		Запрос = новый Запрос;
	Иначе
		Запрос = ЗапросИлиМакетКомпоновки;
	КонецЕсли;
	
	СтрукЗапрос = новый Структура;
	СтрукЗапрос.Вставить("Формат", "СДРКонсольЗапросовХ");
	СтрукЗапрос.Вставить("Версия", 2);
	СтрукЗапрос.Вставить("Назначение", "Запросы");
	СтрукЗапрос.Вставить("Элементы", новый Массив);
	
	СтрукЭлемент = новый Структура;
	СтрукЭлемент.Вставить("Дети", новый Массив);
	СтрукЭлемент.Вставить("Имя", "Запрос");
	СтрукЭлемент.Вставить("Текст", Запрос.Текст);
	СтрукЭлемент.Вставить("СпособВыгрузки", 0);
	СтрукЭлемент.Вставить("Параметры", новый Массив);
	СтрукЭлемент.Вставить("МВТ", новый Массив);
	
	Если ВключатьВременныеТаблицы и Запрос.МенеджерВременныхТаблиц <> Неопределено и Запрос.МенеджерВременныхТаблиц.Таблицы <> Неопределено и Запрос.МенеджерВременныхТаблиц.Таблицы.Количество() <> 0 Тогда
		
		Если МаксЧислоЗаписей >= 0 Тогда
			пЗапрос = новый Запрос;
			пЗапрос.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
			пШаблонЗапроса =
			"ВЫБРАТЬ ПЕРВЫЕ " + Формат(МаксЧислоЗаписей, "ЧРГ=0;ЧН=;") + "
			|	т.*
			|ИЗ
			|	%1 КАК т
			|";
		КонецЕсли;
		
		ТекстЗапроса = "";
		Если Запрос = Неопределено Тогда
			Запрос = новый Запрос;
		КонецЕсли;
		
		Для каждого пТаблицаМВТ из Запрос.МенеджерВременныхТаблиц.Таблицы Цикл
			пРезультатЗапроса = пТаблицаМВТ.ПолучитьДанные();
			Если МаксЧислоЗаписей < 0 Тогда
				ТабРезультат = пРезультатЗапроса.Выгрузить();
			ИначеЕсли пРезультатЗапроса.Пустой() Тогда
				ТабРезультат = пРезультатЗапроса.Выгрузить();
			Иначе
				пЗапрос.Текст = СтрЗаменить(пШаблонЗапроса, "%1", пТаблицаМВТ.ПолноеИмя);
				ТабРезультат = пЗапрос.Выполнить().Выгрузить();
			КонецЕсли;
			
			пСтрук = новый Структура;
			пСтрук.Вставить("Имя", пТаблицаМВТ.ПолноеИмя);
			пСтрук.Вставить("СпецЗначение", ЗначениеВСтрокуВнутр(ТабРезультат));
			
			СтрукЭлемент.МВТ.Добавить(пСтрук);
		КонецЦикла;
	КонецЕсли;
	
	// ВАЖНО: алгоритм формирования параметров должен быть идентичен (метка:001)
	ПараметрыЗапроса = Запрос.Параметры;
	Для каждого Элем из ПараметрыЗапроса Цикл
		СтрукПараметр = новый Структура;
		СтрукПараметр.Вставить("Имя", Элем.Ключ);
		СтрукПараметр.Вставить("Значение", Элем.Значение);
		СтрукПараметр.Вставить("ЭтоСпецЗначение", ложь);
		СтрукПараметр.Вставить("СпецЗначение", "");
		СтрукПараметр.Вставить("ТипЗначения", "");
		
		Если ТипЗнч(Элем.Значение) = Тип("Массив") Тогда
			Список = новый СписокЗначений;
			Список.ЗагрузитьЗначения(Элем.Значение);
			СтрукПараметр.Значение = Список;
			
		ИначеЕсли ТипЗнч(Элем.Значение) = Тип("ФиксированныйМассив") Тогда
			Список = новый СписокЗначений;
			Список.ЗагрузитьЗначения(новый Массив(Элем.Значение));
			СтрукПараметр.Значение = Список;
			
		ИначеЕсли ТипЗнч(Элем.Значение) = Тип("Граница") Тогда
			СтрукПараметр.ЭтоСпецЗначение = истина;
			СтрукПараметр.Значение = "Граница";
			СтрукПараметр.ТипЗначения = "Граница";
			СтрукПараметр.СпецЗначение = ЗначениеВСтрокуВнутр(Элем.Значение);
			
		ИначеЕсли ТипЗнч(Элем.Значение) = Тип("ТаблицаЗначений") Тогда
			СтрукПараметр.ЭтоСпецЗначение = истина;
			СтрукПараметр.Значение = "ТаблицаЗначений";
			СтрукПараметр.ТипЗначения = "ТаблицаЗначений";
			СтрукПараметр.СпецЗначение = ЗначениеВСтрокуВнутр(Элем.Значение);
			
		ИначеЕсли ТипЗнч(Элем.Значение) = Тип("МоментВремени") Тогда
			СтрукПараметр.ЭтоСпецЗначение = истина;
			СтрукПараметр.Значение = "МоментВремени";
			СтрукПараметр.ТипЗначения = "МоментВремени";
			СтрукПараметр.СпецЗначение = ЗначениеВСтрокуВнутр(Элем.Значение);
			
		ИначеЕсли ТипЗнч(Элем.Значение) = Тип("УникальныйИдентификатор") Тогда
			СтрукПараметр.ЭтоСпецЗначение = истина;
			СтрукПараметр.Значение = Строка(Элем.Значение);
			СтрукПараметр.ТипЗначения = "УникальныйИдентификатор";
			СтрукПараметр.СпецЗначение = ЗначениеВСтрокуВнутр(Элем.Значение);
		КонецЕсли;
		
		СтрукЭлемент.Параметры.Добавить(СтрукПараметр);
	КонецЦикла;
	
	СтрукЗапрос.Элементы.Добавить(СтрукЭлемент);
	
	// преобразование запроса в строку XML
	Если ИмяФайла = Неопределено Тогда
		Попытка
			СтрукЗапросXML = новый Структура;
			СтрукЗапросXML.Вставить("СжиматьПараметрыXML", СжиматьПараметрыXML);
			СтрукЗапросXML.Вставить("Текст", СтрукЭлемент.Текст);
			
			СтрукЗапросXML.Вставить("МВТ", новый Структура);
			Для каждого Элем из СтрукЭлемент.МВТ Цикл
				ИмяПараметра = Элем.Имя;
				Если СжиматьПараметрыXML Тогда
					ЗначениеПараметра = ЗначениеИзСтрокиВнутр(Элем.СпецЗначение);
					Если ТипЗнч(ЗначениеПараметра) = Тип("ТаблицаЗначений") Тогда
						ЗначениеПараметра = новый ХранилищеЗначения(ЗначениеПараметра, новый  СжатиеДанных(9));
					КонецЕсли;
				Иначе
					ЗначениеПараметра = ЗначениеИзСтрокиВнутр(Элем.СпецЗначение);
				КонецЕсли;
				СтрукЗапросXML.МВТ.Вставить(ИмяПараметра, ЗначениеПараметра);
			КонецЦикла;
			
			СтрукЗапросXML.Вставить("Параметры", новый Структура);
			Для каждого Элем из СтрукЭлемент.Параметры Цикл
				ИмяПараметра = Элем.Имя;
				Если Элем.ЭтоСпецЗначение Тогда
					Если СжиматьПараметрыXML Тогда
						ЗначениеПараметра = ЗначениеИзСтрокиВнутр(Элем.СпецЗначение);
						Если ТипЗнч(ЗначениеПараметра) = Тип("ТаблицаЗначений") Тогда
							ЗначениеПараметра = новый ХранилищеЗначения(ЗначениеПараметра, новый  СжатиеДанных(9));
						КонецЕсли;
					Иначе
						ЗначениеПараметра = ЗначениеИзСтрокиВнутр(Элем.СпецЗначение);
					КонецЕсли;
				Иначе
					ЗначениеПараметра = Элем.Значение;
				КонецЕсли;
				СтрукЗапросXML.Параметры.Вставить(ИмяПараметра, ЗначениеПараметра);
			КонецЦикла;
			
			ЗаписьXML = новый ЗаписьXML;
			ЗаписьXML.УстановитьСтроку();
			СериализаторXDTO.ЗаписатьXML(ЗаписьXML, СтрукЗапросXML, НазначениеТипаXML.Явное);
			
			Возврат ЗаписьXML.Закрыть();
		Исключение
			Возврат ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	
	СтрокаДанных = ЗначениеВСтрокуВнутр(СтрукЗапрос);
	
	ТДок = новый ТекстовыйДокумент;
	ТДок.УстановитьТекст(СтрокаДанных);
	
	Если Найти(ИмяФайла, ".") = 0 Тогда
		ИмяФайла = ИмяФайла + ".dat";
	КонецЕсли;
	
	Попытка
		ТДок.Записать(ИмяФайла);
		Возврат "Ок";
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;
	
КонецФункции


#КонецЕсли
