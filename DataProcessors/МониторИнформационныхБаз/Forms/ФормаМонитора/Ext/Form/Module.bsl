

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ЗаполнитьДеревоЭлементов();		

КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭлементовКластераПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если Элемент.ТекущиеДанные.КэшОписанияЭлемента = Неопределено Тогда
			ПолеОписанияЭлемента = ЗаполнитьОписаниеЭлемента(Элемент.ТекущиеДанные);
			Элемент.ТекущиеДанные.КэшОписанияЭлемента = ПолеОписанияЭлемента;
		Иначе
			ПолеОписанияЭлемента = Элемент.ТекущиеДанные.КэшОписанияЭлемента;
		КонецЕсли;
	КонецЕсли;		

КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьОписаниеЭлемента(ТекущиеДанные)
	
	Кластер = ТекущиеДанные.ЭлементКластера;
	СостояниеКластера = ТекущиеДанные.Состояние;
	
	Если СостояниеКластера <> ПредопределенноеЗначение("Перечисление.СостоянияЭлементовКластера.Активен") Тогда
		Возврат ПолучитьМакетНеактивногоЭлемента();
	КонецЕсли;
	
	Если ТипЗнч(Кластер) = Тип("СправочникСсылка.КластерСервераПриложений") Тогда
		Возврат ЗаполнитьОписаниеКластераНаСервере(Кластер);
	ИначеЕсли ТипЗнч(Кластер) = Тип("СправочникСсылка.ИнформационныеБазы") Тогда	
		
	КонецЕсли;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьМакетНеактивногоЭлемента()

	Возврат Обработки.МониторИнформационныхБаз.ПолучитьМакет("МакетНеактивногоЭлемента");	

КонецФункции // ПолучитьМакетНеактивногоЭлемента()

&НаСервере
Функция ЗаполнитьОписаниеКластераНаСервере(Кластер)
	
	Возврат Справочники.КластерСервераПриложений.ПолучитьМакетОписанияКластера(Кластер);		
	
КонецФункции

&НаКлиенте
Процедура ПолеОписанияЭлементаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОбработки = Неопределено;
	Если Расшифровка.Свойство("ПараметрыБазы", ПараметрыОбработки) Тогда
		//ОбработатьРегистрациюИнформационнойБазы(ПараметрыОбработки);
		
		ДополнительныеПараметры = Новый Структура; 
		ДополнительныеПараметры.Вставить("ПараметрыБазы", ПараметрыОбработки);
		ДополнительныеПараметры.Вставить("Кластер", Элементы.ДеревоЭлементовКластера.ТекущиеДанные.ЭлементКластера);
		
		ИнформационнаяБаза = ПолучитьНезарегестрированнуюБазу(ДополнительныеПараметры.Кластер, ПараметрыОбработки["name"]);
		
		ОткрытьФорму("Справочник.ИнформационныеБазы.ФормаОбъекта", Новый Структура("Ключ, ДополнительныеПараметры", ИнформационнаяБаза, ДополнительныеПараметры), ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры    


&НаСервереБезКонтекста
Функция ПолучитьНезарегестрированнуюБазу(Кластер, ИмяНаСервере1С)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИнформационныеБазы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ИнформационныеБазы КАК ИнформационныеБазы
	               |ГДЕ
	               |	ИнформационныеБазы.Сервер1С = &Сервер1С
	               |	И ИнформационныеБазы.ИмяНаСервере1С = &ИмяНаСервере1С";
	
	Запрос.УстановитьПараметр("Сервер1С", Кластер);
	Запрос.УстановитьПараметр("ИмяНаСервере1С", ИмяНаСервере1С);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ИнформационныеБазы.ПустаяСсылка();
	КонецЕсли;

КонецФункции // ПолучитьНезарегестрированнуюБазу()


&НаСервере
Процедура ЗаполнитьДеревоЭлементов()
	
	ДеревоКластеровНовое = РеквизитФормыВЗначение("ДеревоЭлементовКластера");
	
	ДеревоКластеровНовое.Строки.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	КластерСервераПриложений.Ссылка КАК Кластер,
	               |	ИнформационныеБазы.Ссылка КАК ИнформационнаяБаза
	               |ИЗ
	               |	Справочник.КластерСервераПриложений КАК КластерСервераПриложений
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИнформационныеБазы КАК ИнформационныеБазы
	               |		ПО КластерСервераПриложений.Ссылка = ИнформационныеБазы.Сервер1С
	               |ГДЕ
	               |	КластерСервераПриложений.Активен
	               |ИТОГИ ПО
	               |	Кластер";
					
	Результат = Запрос.Выполнить();
	ВыборкаКластер = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКластер.Следующий() Цикл          
		
		СтрокаДерева = ДеревоКластеровНовое.Строки.Добавить();
		СтрокаДерева.ЭлементКластера = ВыборкаКластер.Кластер;
					
		СтрокаДерева.Состояние = Справочники.КластерСервераПриложений.ПолучитьСостояниеКластера(ВыборкаКластер.Кластер);
		
		Если СтрокаДерева.Состояние = Перечисления.СостоянияЭлементовКластера.Активен Тогда
			СтрокаДерева.ИндексСостояния = 1;		
		ИначеЕсли СтрокаДерева.Состояние = Перечисления.СостоянияЭлементовКластера.НеАктивен Тогда
			СтрокаДерева.ИндексСостояния = 2;	 					
		Иначе
			СтрокаДерева.ИндексСостояния = 0;
		КонецЕсли;
								
		ВыборкаБаза = ВыборкаКластер.Выбрать();		
		Пока ВыборкаБаза.Следующий() Цикл
			СтрокаБазы = СтрокаДерева.Строки.Добавить();	
			СтрокаБазы.ЭлементКластера = ВыборкаБаза.ИнформационнаяБаза;
		КонецЦикла;		
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоКластеровНовое, "ДеревоЭлементовКластера");
			
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоКластеров(Команда)
	
	ТекущаяСтрока = Элементы.ДеревоЭлементовКластера.ТекущаяСтрока;
	ЗаполнитьДеревоЭлементов();	
	ОбновитьДеревоЭлементов();	
	
	Элементы.ДеревоЭлементовКластера.ТекущаяСтрока = ТекущаяСтрока;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РегистрацияБазы" Тогда
		ТекущаяСтрока = Элементы.ДеревоЭлементовКластера.ТекущаяСтрока;
		ЗаполнитьДеревоЭлементов();	
		ОбновитьДеревоЭлементов();
		Элементы.ДеревоЭлементовКластера.ТекущаяСтрока = ТекущаяСтрока;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоЭлементов()
	
	ЭлементыДерева = ДеревоЭлементовКластера.ПолучитьЭлементы();
	Для каждого СтрокаДерева Из ЭлементыДерева Цикл
		
		Элементы.ДеревоЭлементовКластера.Развернуть(СтрокаДерева.ПолучитьИдентификатор());	
		
	КонецЦикла;	

КонецПроцедуры // ОбновитьДеревоЭлементов()

&НаКлиенте
Процедура ДеревоЭлементовКластераВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	АктивнаяСтрокаДерева = ДеревоЭлементовКластера.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если АктивнаяСтрокаДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементКластера = АктивнаяСтрокаДерева.ЭлементКластера;
		
	Если ТипЗнч(ЭлементКластера) = Тип("СправочникСсылка.КластерСервераПриложений") Тогда
		
		ОткрытьФорму("Справочник.КластерСервераПриложений.ФормаОбъекта", Новый Структура("Ключ", ЭлементКластера));
		
	ИначеЕсли ТипЗнч(ЭлементКластера) = Тип("СправочникСсылка.ИнформационныеБазы") Тогда
		
		ОткрытьФорму("Справочник.ИнформационныеБазы.ФормаОбъекта", Новый Структура("Ключ", ЭлементКластера));
		
	КонецЕсли;
	
	
КонецПроцедуры





