	 
&НаКлиенте	 
Перем ТекущийВидОтбора;	 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидОтбора = "Кластеры";
	ТекущийВидОтбора = ВидОтбора;
	ЗаполнитьТаблицуКластеров();		

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЭлементовКластераПриАктивизацииЯчейки(Элемент)
	
	УстановитьОтборПоТаблицеБаз();
	
КонецПроцедуры 


&НаКлиенте
Процедура УстановитьОтборПоТаблицеБаз()

	Если ТекущийВидОтбора <> ВидОтбора Тогда
		
		Для Каждого ЭлементОтбор Из ТаблицаИнформационныхБаз.Отбор.Элементы Цикл
			
			Если ЭлементОтбор.Представление = ТекущийВидОтбора Тогда
				
				ЭлементОтбор.Использование = Ложь;						
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ТекущийВидОтбора = ВидОтбора;
	
	Если ВидОтбора = "Кластеры" И Элементы.ТаблицаЭлементовКластера.ТекущиеДанные <> Неопределено Тогда      
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ТаблицаИнформационныхБаз, 
																	"Владелец", 
																	Элементы.ТаблицаЭлементовКластера.ТекущиеДанные.ЭлементКластера,
																	,
																	ВидОтбора, 
																	Истина);
		
	ИначеЕсли ВидОтбора = "Проекты" И Элементы.ТаблицаПроектов.ТекущиеДанные <> Неопределено Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ТаблицаИнформационныхБаз, 
																	"Проект", 
																	Элементы.ТаблицаПроектов.ТекущиеДанные.Ссылка,
																	,
																	ВидОтбора, 
																	Истина);
		
	КонецЕсли;
	

КонецПроцедуры // УстановитьОтборПоТаблицеБаз()



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    ОтобразитьТекущийОтбор();
	
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьОписаниеЭлемента(ТекущиеДанные)
	
	Кластер = ТекущиеДанные.ЭлементКластера;
	СостояниеКластера = ТекущиеДанные.Состояние;
	
	Если СостояниеКластера <> ПредопределенноеЗначение("Перечисление.СостоянияЭлементовКластера.Активен") Тогда
		Возврат ПолучитьМакетНеактивногоЭлемента();
	КонецЕсли;
	
	Если ТипЗнч(Кластер) = Тип("СправочникСсылка.Кластеры1С") Тогда
		Возврат ЗаполнитьОписаниеКластераНаСервере(Кластер);
	ИначеЕсли ТипЗнч(Кластер) = Тип("СправочникСсылка.ИнформационныеБазы") Тогда	
		
	КонецЕсли;
	
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьМакетНеактивногоЭлемента()

	Возврат Обработки.МониторИнформационныхБаз.ПолучитьМакет("МакетНеактивногоЭлемента");	

КонецФункции // ПолучитьМакетНеактивногоЭлемента()

&НаСервере
Функция ЗаполнитьОписаниеКластераНаСервере(Кластер)
	
	Возврат Справочники.Кластеры1С.ПолучитьМакетОписанияКластера(Кластер);		
	
КонецФункции

&НаКлиенте
Процедура ПолеОписанияЭлементаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОбработки = Неопределено;
	Если Расшифровка.Свойство("ПараметрыБазы", ПараметрыОбработки) Тогда
		//ОбработатьРегистрациюИнформационнойБазы(ПараметрыОбработки);
		
		ДополнительныеПараметры = Новый Структура; 
		ДополнительныеПараметры.Вставить("ПараметрыБазы", ПараметрыОбработки);
		ДополнительныеПараметры.Вставить("Кластер", Элементы.ТаблицаЭлементовКластера.ТекущиеДанные.ЭлементКластера);
		
		ИнформационнаяБаза = ПолучитьНезарегестрированнуюБазу(ДополнительныеПараметры.Кластер, ПараметрыОбработки["name"]);
		
		ОткрытьФорму("Справочник.ИнформационныеБазы.ФормаОбъекта", Новый Структура("Ключ, ДополнительныеПараметры", ИнформационнаяБаза, ДополнительныеПараметры), ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры    

&НаСервереБезКонтекста
Функция ПолучитьНезарегестрированнуюБазу(Кластер, ИмяНаСервере1С)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИнформационныеБазы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ИнформационныеБазы КАК ИнформационныеБазы
	               |ГДЕ
	               |	ИнформационныеБазы.Владелец = &Владелец
	               |	И ИнформационныеБазы.ИмяНаСервере1С = &ИмяНаСервере1С";
	
	Запрос.УстановитьПараметр("Владелец", Кластер);
	Запрос.УстановитьПараметр("ИмяНаСервере1С", ИмяНаСервере1С);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ИнформационныеБазы.ПустаяСсылка();
	КонецЕсли;

КонецФункции // ПолучитьНезарегестрированнуюБазу()

&НаСервере                                                                                                            
Процедура ЗаполнитьТаблицуКластеров()
	
	//ТаблицаКластеров = РеквизитФормыВЗначение("ТаблицаЭлементовКластера");
	//
	//ТаблицаКластеров.Очистить();
	//
	//Запрос = Новый Запрос();
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	Кластеры1С.Ссылка КАК Кластер,
	//               |	Кластеры1С.ИдентификаторКластера КАК ИдентификаторКластера,
	//               |	Кластеры1С.ПортКластера КАК ПортКластера,
	//               |	Кластеры1С.ВерсияПлатформы КАК ВерсияПлатформы
	//               |ИЗ
	//               |	Справочник.Кластеры1С КАК Кластеры1С
	//               |ГДЕ
	//               |	НЕ Кластеры1С.ПометкаУдаления
	//               |	И Кластеры1С.Активен";
	//				
	//Результат = Запрос.Выполнить();
	//ВыборкаКластер = Результат.Выбрать();
	//
	//Пока ВыборкаКластер.Следующий() Цикл          
	//	
	//	СтрокаТаблицыКластеров = ТаблицаКластеров.Добавить();
	//	СтрокаТаблицыКластеров.ЭлементКластера = ВыборкаКластер.Кластер;
	//	СтрокаТаблицыКластеров.ИдентификаторКластера = ВыборкаКластер.ИдентификаторКластера;
	//	СтрокаТаблицыКластеров.КраткоеОписание = "ОС: Linux" + "  Платформа: " + ВыборкаКластер.ВерсияПлатформы;
	//	
	//	СтрокаТаблицыКластеров.ИндексСостояния = 0;
	//	
	//	
	//КонецЦикла;
	//
	//ЗначениеВРеквизитФормы(ТаблицаКластеров, "ТаблицаЭлементовКластера");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоКластеров(Команда)
	
	ТекущаяСтрока = Элементы.ТаблицаЭлементовКластера.ТекущаяСтрока;
	ЗаполнитьТаблицуКластеров();
	ОбновитьСостоянияКластеров();
	Элементы.ТаблицаЭлементовКластера.ТекущаяСтрока = ТекущаяСтрока;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РегистрацияБазы" Тогда
		ТекущаяСтрока = Элементы.ТаблицаЭлементовКластера.ТекущаяСтрока;
		ЗаполнитьТаблицуКластеров();
		ОбновитьСостоянияКластеров();
		Элементы.ТаблицаЭлементовКластера.ТекущаяСтрока = ТекущаяСтрока;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостоянияКластеров()
	
	Для Каждого СтрокаТаблицы Из ТаблицаЭлементовКластера Цикл
		
		//СтрокаТаблицы.
		
			
		                                                            
	КонецЦикла;	

КонецПроцедуры // ОбновитьСостоянияКластеров() 

&НаКлиенте
Процедура ТаблицаИнформационныхБазВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИнформационнаяБаза = Элементы.ТаблицаИнформационныхБаз.ТекущаяСтрока;
	Если Поле.Имя = "ТаблицаИнформационныхБазПолеНастройка" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокВыбора = Новый СписокЗначений;	
		СписокВыбора.Добавить("Запустить", "Запустить", , БиблиотекаКартинок.ВыполнитьЗапуск);
		СписокВыбора.Добавить("Редактировать", "Редактировать", , БиблиотекаКартинок.Редактировать);
		СписокВыбора.Добавить("Обслуживание", "Обслуживание", , БиблиотекаКартинок.ВыполнитьСкрипт);

		Оповещение = Новый ОписаниеОповещения("ПослеВыбораИзМеню", ЭтотОбъект, ИнформационнаяБаза);
		ПоказатьВыборИзМеню(Оповещение, СписокВыбора, Элемент);				 
				 
	Иначе
		
		
	    	ОткрытьФорму("Справочник.ИнформационныеБазы.Форма.ФормаПросмотра", 
						Новый Структура("Ключ", ИнформационнаяБаза), 
						Элемент, 
						ЭтаФорма, 
						, , ,
						РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		
	КонецЕсли;
	
КонецПроцедуры   


&НаКлиенте
Процедура ПослеВыбораИзМеню(ВыбранныйЭлемент, Параметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныйЭлемент.Значение = "Запустить" Тогда
		ОткрытьФорму("Справочник.ИнформационныеБазы.Форма.ФормаЗапускаПриложения", Новый Структура("ИнформационнаяБаза", Параметры));
	КонецЕсли;
	

КонецПроцедуры


&НаКлиенте
Процедура ТаблицаПроектовПриАктивизацииЯчейки(Элемент)
	
	УстановитьОтборПоТаблицеБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОтбораПриИзменении(Элемент)
	
	ОтобразитьТекущийОтбор();	
	
КонецПроцедуры   

&НаКлиенте
Процедура ОтобразитьТекущийОтбор()

	Если ВидОтбора = "Кластеры" Тогда
		Элементы.ГруппаСтраницыОтборов.ТекущаяСтраница = Элементы.ГруппаКластеры;
	ИначеЕсли ВидОтбора = "Проекты" Тогда
		Элементы.ГруппаСтраницыОтборов.ТекущаяСтраница = Элементы.ГруппаПроекты;
	КонецЕсли;
	
	УстановитьОтборПоТаблицеБаз();

КонецПроцедуры // ОтобразитьТекущийОтбор()








