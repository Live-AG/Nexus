//УстановитьТекстЗапросаСпискаИсполнениеНаСервере()
// гэсИзменитьТекстЗапросаПодзадач(ТекстЗапроса);


ВЫБРАТЬ РАЗЛИЧНЫЕ
	Контроль.Ссылка КАК Ссылка,
	Контроль.Предмет КАК Предмет,
	Контроль.Источник КАК Источник,
	Контроль.Контролер КАК Контролер,
	Контроль.ПоставленНаКонтроль КАК ПоставленНаКонтроль,
	Контроль.СнятСКонтроля КАК СнятСКонтроля,
	ЗадачаИсполнителя.Ссылка КАК ЗалачаНаКонтроле
ПОМЕСТИТЬ ЗадачиНаКонтролеССылка
ИЗ
	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контроль КАК Контроль
		ПО ЗадачаИсполнителя.Ссылка = Контроль.Предмет
ГДЕ
	Контроль.СнятСКонтроля = ЛОЖЬ
	И Контроль.Контролер = &ТекущийПользователь
	И Контроль.ПоставленНаКонтроль = ИСТИНА
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗЛИЧНЫЕ
	Контроль.Ссылка КАК Ссылка,
	Контроль.Предмет КАК Предмет,
	Контроль.Источник КАК Источник,
	Контроль.Контролер КАК Контролер,
	Контроль.ПоставленНаКонтроль КАК ПоставленНаКонтроль,
	Контроль.СнятСКонтроля КАК СнятСКонтроля,
	ЗадачаИсполнителя.БизнесПроцесс КАК ЗалачаНаКонтроле
ПОМЕСТИТЬ ЗадачиНаКонтролеБизнесПроцесс
ИЗ
	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контроль КАК Контроль
		ПО ЗадачаИсполнителя.БизнесПроцесс = Контроль.Предмет
ГДЕ
	Контроль.СнятСКонтроля = ЛОЖЬ
	И Контроль.Контролер = &ТекущийПользователь
	И Контроль.ПоставленНаКонтроль = ИСТИНА
;

////////////////////////////////////////////////////////////////////////////////
 ВЫБРАТЬ
	ДочерниеБизнесПроцессы.ДочернийПроцесс КАК ДочернийПроцесс,
	ДочерниеБизнесПроцессы.СвязующаяЗадача КАК СвязующаяЗадача
ПОМЕСТИТЬ втПроцессы
ИЗ
	РегистрСведений.ДочерниеБизнесПроцессы КАК ДочерниеБизнесПроцессы
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеБизнесПроцессов КАК ДанныеБизнесПроцессов
		ПО (ДочерниеБизнесПроцессы.ДочернийПроцесс = ДанныеБизнесПроцессов.БизнесПроцесс)
ГДЕ
	ДанныеБизнесПроцессов.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)
   И ИСТИНА В
			(ВЫБРАТЬ ПЕРВЫЕ 1
					ИСТИНА
	ИЗ
					РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
				ГДЕ
					ИсполнителиРолейИДелегаты.РольПользователь = ДочерниеБизнесПроцессы.СвязующаяЗадача.ТекущийИсполнитель
					И ИсполнителиРолейИДелегаты.ИсполнительДелегат = &ТекущийПользователь
					И ИсполнителиРолейИДелегаты.ИмяОбластиДелегирования В ("", "ПроцессыИЗадачи"))
	И НЕ ДочерниеБизнесПроцессы.СвязующаяЗадача.ПометкаУдаления
	И НЕ ДочерниеБизнесПроцессы.СвязующаяЗадача.ИсключенаИзПроцесса 
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ЛОЖЬ КАК ЕстьДочерниеПроцессы,
	МИНИМУМ(ВЫБОР
			КОГДА ЗадачиДляВыполнения.СостояниеВыполнения ЕСТЬ NULL
				ТОГДА ЗадачаИсполнителя.Выполнена
			КОГДА ЗадачиДляВыполнения.СостояниеВыполнения = ЗНАЧЕНИЕ(Перечисление.СостоянияЗадачДляВыполнения.ГотоваКВыполнению)
				ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
		КОНЕЦ) КАК ПодЗадачиВыполнены,
	втПроцессы.СвязующаяЗадача КАК СвязующаяЗадача
ПОМЕСТИТЬ втДочерниеПроцессы
ИЗ
	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиДляВыполнения КАК ЗадачиДляВыполнения
		ПО (ЗадачаИсполнителя.Ссылка = ЗадачиДляВыполнения.Задача)
		ЛЕВОЕ СОЕДИНЕНИЕ втПроцессы КАК втПроцессы
		ПО (ЗадачаИсполнителя.БизнесПроцесс = втПроцессы.ДочернийПроцесс)
ГДЕ
	ЗадачаИсполнителя.БизнесПроцесс В
			(ВЫБРАТЬ
				втПроцессы.ДочернийПроцесс
			ИЗ
				втПроцессы)
	И ЗадачаИсполнителя.ПометкаУдаления = ЛОЖЬ
СГРУППИРОВАТЬ ПО
	втПроцессы.СвязующаяЗадача

ИНДЕКСИРОВАТЬ ПО
	СвязующаяЗадача
	;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ЗадачаИсполнителя.Ссылка КАК Ссылка,
	ЗадачаИсполнителя.Дата КАК Дата,
	ЗадачаИсполнителя.БизнесПроцесс КАК БизнесПроцесс,
	ЗадачаИсполнителя.ТочкаМаршрута КАК ТочкаМаршрута,
	ЗадачаИсполнителя.Наименование КАК Наименование,
	ЗадачаИсполнителя.Выполнена КАК Выполнена,
	ЗадачаИсполнителя.СрокИсполнения КАК СрокИсполнения,
	ВЫБОР
		КОГДА НЕ &ИспользоватьДатуИВремяВСрокахЗадач
				И ЗадачаИсполнителя.СрокИсполнения <> ДАТАВРЕМЯ(1, 1, 1)
			ТОГДА КОНЕЦПЕРИОДА(ЗадачаИсполнителя.СрокИсполнения, ДЕНЬ)
		ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения
	КОНЕЦ КАК СрокИсполненияДляОтображенияВСписке,
	ЗадачаИсполнителя.ПредметСтрокой КАК ПредметСтрокой,
	ЗадачаИсполнителя.Автор КАК Автор,
	ЗадачаИсполнителя.ПринятаКИсполнению КАК ПринятаКИсполнению,
	ВЫБОР
		КОГДА ЗадачаИсполнителя.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Низкая)
			ТОГДА 0
		КОГДА ЗадачаИсполнителя.Важность = ЗНАЧЕНИЕ(Перечисление.ВариантыВажностиЗадачи.Высокая)
			ТОГДА 2
		ИНАЧЕ 1
	КОНЕЦ КАК ВажностьКартинка,
	ВЫБОР
		КОГДА ЗадачаИсполнителя.Проект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
			ТОГДА &ИмяГруппыБезПроекта
		ИНАЧЕ ЗадачаИсполнителя.Проект
	КОНЕЦ КАК Проект,
	ЕСТЬNULL(ФлагиОбъектов.Флаг, ЗНАЧЕНИЕ(Перечисление.ФлагиОбъектов.ПустаяСсылка)) КАК Флаг,
	ВЫБОР
		КОГДА ФлагиОбъектов.Флаг = ЗНАЧЕНИЕ(Перечисление.ФлагиОбъектов.Красный)
			ТОГДА 1
		КОГДА ФлагиОбъектов.Флаг = ЗНАЧЕНИЕ(Перечисление.ФлагиОбъектов.Синий)
			ТОГДА 2
		КОГДА ФлагиОбъектов.Флаг = ЗНАЧЕНИЕ(Перечисление.ФлагиОбъектов.Желтый)
			ТОГДА 3
		КОГДА ФлагиОбъектов.Флаг = ЗНАЧЕНИЕ(Перечисление.ФлагиОбъектов.Зеленый)
			ТОГДА 4
		КОГДА ФлагиОбъектов.Флаг = ЗНАЧЕНИЕ(Перечисление.ФлагиОбъектов.Оранжевый)
			ТОГДА 5
		КОГДА ФлагиОбъектов.Флаг = ЗНАЧЕНИЕ(Перечисление.ФлагиОбъектов.Лиловый)
			ТОГДА 6
		ИНАЧЕ 0
	КОНЕЦ КАК НомерФлага,
	ЗадачаИсполнителя.Исполнитель КАК Исполнитель,
	ВЫБОР
		КОГДА ЗадачиДляВыполнения.СостояниеВыполнения = ЗНАЧЕНИЕ(Перечисление.СостоянияЗадачДляВыполнения.ВыполнениеОтменено)
			ТОГДА 9
		КОГДА РезультатыВыполненияПроцессовИЗадач.Результат = ЗНАЧЕНИЕ(Перечисление.ВариантыВыполненияПроцессовИЗадач.Положительно)
			ТОГДА 7
		КОГДА РезультатыВыполненияПроцессовИЗадач.Результат = ЗНАЧЕНИЕ(Перечисление.ВариантыВыполненияПроцессовИЗадач.ПоложительноСЗамечаниями)
			ТОГДА 6
		КОГДА РезультатыВыполненияПроцессовИЗадач.Результат = ЗНАЧЕНИЕ(Перечисление.ВариантыВыполненияПроцессовИЗадач.Отрицательно)
			ТОГДА 5
		КОГДА ЗадачаИсполнителя.Выполнена = ИСТИНА
			ТОГДА 4
		ИНАЧЕ -1
	КОНЕЦ КАК РезультатЗавершения,
	ВЫБОР
		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтроле)
			ТОГДА ВЫБОР
					КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
							ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
						ТОГДА 1
					ИНАЧЕ 3
				КОНЕЦ
		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроля)
			ТОГДА 4
		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.НаКонтролеНесколько)
			ТОГДА ВЫБОР
					КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
							ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
						ТОГДА 5
					КОГДА КешИнформацииОбОбъектах.СрокИсполненияОбщий = ДАТАВРЕМЯ(1, 1, 1)
							ИЛИ КешИнформацииОбОбъектах.СрокИсполненияОбщий >= &ТекущаяДата
						ТОГДА 8
					ИНАЧЕ 6
				КОНЕЦ
		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СнятсКонтроляНесколько)
			ТОГДА 7
		КОГДА КешИнформацииОбОбъектах.СостояниеКонтроля = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтроля.СмешанноНесколько)
			ТОГДА ВЫБОР
					КОГДА КешИнформацииОбОбъектах.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
							ИЛИ КешИнформацииОбОбъектах.СрокИсполнения >= &ТекущаяДата
						ТОГДА 9
					ИНАЧЕ 10
				КОНЕЦ
		ИНАЧЕ 0
	КОНЕЦ КАК СостояниеКонтроля,
	ВЫБОР
		КОГДА ЗадачаИсполнителя.ТекущийИсполнитель = &ТекущийПользователь
			ТОГДА -1
		КОГДА МоиРоли.РольИсполнителя ЕСТЬ NULL
			ТОГДА 3
		ИНАЧЕ 4
	КОНЕЦ КАК Картинка,
	ЗадачаИсполнителя.ДатаИсполнения КАК ДатаИсполнения,
	ЗадачиДляВыполнения.СостояниеВыполнения КАК СостояниеВыполнения,
	ПредметыЗадач.Предмет КАК Предмет,
	ЕСТЬNULL(ПредметыЗадач.Предмет, &СтрокаБезПредмета) КАК ПредметЗаголовок,
	ЕСТЬNULL(втДочерниеПроцессы.ЕстьДочерниеПроцессы, ЛОЖЬ) КАК ЕстьДочерниеПроцессы,
	ЕСТЬNULL(втДочерниеПроцессы.ПодЗадачиВыполнены, ЛОЖЬ) КАК ПодЗадачиВыполнены,
	ЗадачиНаКонтролеССылка.СнятСКонтроля КАК ССылкаСнятСКонтроля,
	ЗадачиНаКонтролеБизнесПроцесс.СнятСКонтроля КАК БизнесПроцессСнятСКонтроля,
	ВЫБОР
		КОГДА ЗадачиСПодзадачами.Задача ЕСТЬ NULL
			ТОГДА ЛОЖЬ
		ИНАЧЕ ИСТИНА
	КОНЕЦ КАК ЕстьПодзадачи
ИЗ
	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		ЛЕВОЕ СОЕДИНЕНИЕ Задача.ЗадачаИсполнителя.Предметы КАК ПредметыЗадач
		ПО ЗадачаИсполнителя.Ссылка = ПредметыЗадач.Ссылка
			И (ПредметыЗадач.РольПредмета = ЗНАЧЕНИЕ(Перечисление.РолиПредметов.Основной))
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФлагиОбъектов КАК ФлагиОбъектов
		ПО ЗадачаИсполнителя.Ссылка = ФлагиОбъектов.Объект
			И (ФлагиОбъектов.Пользователь = &ТекущийПользователь)
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатыВыполненияПроцессовИЗадач КАК РезультатыВыполненияПроцессовИЗадач
		ПО ЗадачаИсполнителя.Ссылка = РезультатыВыполненияПроцессовИЗадач.Объект
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах КАК КешИнформацииОбОбъектах
		ПО ЗадачаИсполнителя.Ссылка = КешИнформацииОбОбъектах.Объект
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиДляВыполнения КАК ЗадачиДляВыполнения
		ПО ЗадачаИсполнителя.Ссылка = ЗадачиДляВыполнения.Задача
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсполнителиЗадач КАК МоиРоли
		ПО ЗадачаИсполнителя.ТекущийИсполнитель = МоиРоли.РольИсполнителя
			И (МоиРоли.Исполнитель = &ТекущийПользователь)
		ЛЕВОЕ СОЕДИНЕНИЕ втДочерниеПроцессы КАК втДочерниеПроцессы
		ПО ЗадачаИсполнителя.Ссылка = втДочерниеПроцессы.СвязующаяЗадача
		ЛЕВОЕ СОЕДИНЕНИЕ ЗадачиНаКонтролеССылка КАК ЗадачиНаКонтролеССылка
		ПО ЗадачаИсполнителя.Ссылка = ЗадачиНаКонтролеССылка.Предмет
		ЛЕВОЕ СОЕДИНЕНИЕ ЗадачиНаКонтролеБизнесПроцесс КАК ЗадачиНаКонтролеБизнесПроцесс
		ПО ЗадачаИсполнителя.БизнесПроцесс = ЗадачиНаКонтролеБизнесПроцесс.Предмет
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиСПодзадачами КАК ЗадачиСПодзадачами
		ПО ЗадачаИсполнителя.Ссылка = ЗадачиСПодзадачами.Задача
ГДЕ
	ЗадачаИсполнителя.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)
	И ЕСТЬNULL(ЗадачиДляВыполнения.СостояниеВыполнения, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.СостоянияЗадачДляВыполнения.ГотоваКВыполнению)
	И НЕ ЗадачаИсполнителя.ПометкаУдаления
	И НЕ ЗадачаИсполнителя.ИсключенаИзПроцесса
	И ИСТИНА В
			(ВЫБРАТЬ ПЕРВЫЕ 1
				ИСТИНА
			ИЗ
				РегистрСведений.ИсполнителиРолейИДелегаты КАК ИсполнителиРолейИДелегаты
			ГДЕ
				ИсполнителиРолейИДелегаты.РольПользователь = ЗадачаИсполнителя.ТекущийИсполнитель
				И ИсполнителиРолейИДелегаты.ИсполнительДелегат = &ТекущийПользователь
				И ИсполнителиРолейИДелегаты.ИмяОбластиДелегирования В ("", "ПроцессыИЗадачи"))
	И ЗадачаИсполнителя.Выполнена = Ложь
{ГДЕ
	(ЗадачаИсполнителя.Выполнена = &Выполнена),
	(ЗадачаИсполнителя.СрокИсполнения < &ДатаДляОтображенияПросроченных
			И ЗадачаИсполнителя.СрокИсполнения > ДАТАВРЕМЯ(1, 1, 1)),
	(ЗадачаИсполнителя.ПринятаКИсполнению = &ОтображатьСтарыеЗадачи),
	(ЗадачаИсполнителя.Автор = &Автор),
	(ЗадачаИсполнителя.Проект = &Проект),
	(ЗадачаИсполнителя.ТочкаМаршрута = &ТочкаМаршрута),
	((ПредметыЗадач.Ссылка ЕСТЬ NULL) = &БезПредмета),
	(ЕСТЬNULL(ФлагиОбъектов.Флаг, ЗНАЧЕНИЕ(Перечисление.ФлагиОбъектов.ПустаяСсылка)) = &Флаг)}