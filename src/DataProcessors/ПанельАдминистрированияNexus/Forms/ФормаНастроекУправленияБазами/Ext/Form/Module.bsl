	
	
#Область ОписаниеПеременных

&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтрукутараПараметров = Константы.ОбщиеПараметрыАутентификации.ПолучитьСтруктуруНастроекПоУмолчанию(); 
	Если ЗначениеЗаполнено(СтрукутараПараметров) Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СтрукутараПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрыНаСервере()
	
	СтруктураПараметров = Константы.ОбщиеПараметрыАутентификации.ПолучитьОписаниеСтруктурыПараметров(); 
	
	Для Каждого ЭлементСтруктуры Из СтруктураПараметров Цикл
		СтруктураПараметров[ЭлементСтруктуры.Ключ] = ЭтаФорма[ЭлементСтруктуры.Ключ] 
	КонецЦикла;
		
	Константы.ОбщиеПараметрыАутентификации.ЗаписатьСтруктуруНастроекПоУмолчанию(СтруктураПараметров);
	
КонецПроцедуры

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИспользоватьПроектыПриИзменении(Элемент)                        
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольИТСПриИзменении(Элемент)
	
    Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательИТСПриИзменении(Элемент)   
	
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);  
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВыгрузкиБазWindowsПриИзменении(Элемент)
	
    Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВыгрузкиБазLinuxПриИзменении(Элемент)
	
    Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогШаблоновКонфигурацийПриИзменении(Элемент)
	
    Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательЦентральногоСерверПриИзменении(Элемент)
	
    ЗаписатьПараметрыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольЦентральногоСервераПриИзменении(Элемент)
	
    ЗаписатьПараметрыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательСервераАдминистрированияПриИзменении(Элемент)
	
    ЗаписатьПараметрыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольСервераАдминистрированияПриИзменении(Элемент)
	
    ЗаписатьПараметрыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательСУБДПриИзменении(Элемент)
	
    ЗаписатьПараметрыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольСУБДПриИзменении(Элемент)
	
    ЗаписатьПараметрыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательИнформационнойБазыПриИзменении(Элемент)
	
	ЗаписатьПараметрыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольИнформационнойБазыПриИзменении(Элемент)
	
    ЗаписатьПараметрыНаСервере();
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	ИмяКонстанты = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если ИмяКонстанты <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, ИмяКонстанты);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	ИмяКонстанты = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	ОбновитьПовторноИспользуемыеЗначения();
	Возврат ИмяКонстанты;
	
КонецФункции    

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	ЧастиИмени = СтрРазделить(РеквизитПутьКДанным, ".");
	Если ЧастиИмени.Количество() <> 2 Тогда
		Возврат "";
	КонецЕсли;
	
	ИмяКонстанты = ЧастиИмени[1];
	КонстантаМенеджер = Константы[ИмяКонстанты];
	КонстантаЗначение = НаборКонстант[ИмяКонстанты];
	
	Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
		КонстантаМенеджер.Установить(КонстантаЗначение);
	КонецЕсли;
	
	Возврат ИмяКонстанты;
	
КонецФункции



#КонецОбласти