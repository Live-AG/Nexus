
&НаКлиенте
Перем мЗакрытьФормуБезВопросов;

&НаКлиенте
Перем мТекСтрокаТаблицыРегистров;

&НаКлиенте
Перем мТекСтрокаТаблицыРегистровСтарая;


&НаКлиенте
Процедура вПоказатьПредупреждение(ТекстСообщения)
	ПоказатьПредупреждение(, ТекстСообщения, 20);
КонецПроцедуры

&НаКлиенте
Процедура вПоказатьВопрос(ИмяПроцедуры, ТекстВопроса, ДопПараметры = Неопределено)
	ПоказатьВопрос(новый ОписаниеОповещения(ИмяПроцедуры, ЭтаФорма, ДопПараметры), ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 20);
КонецПроцедуры


&НаСервере
Функция вПолучитьОбработку()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаСервереБезКонтекста
Функция вСкопироватьСтруктуру(Источник)
	Струк = новый Структура;
	
	Для каждого Элем из Источник Цикл
		Струк.Вставить(Элем.Ключ, Элем.Значение);
	КонецЦикла;
	
	Возврат Струк;
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	_ОписаниеРазработки = Параметры.ОписаниеРазработки;
	
	мОбъектСсылка = Параметры.мОбъектСсылка;
	мОбъектСсылкаПредыдущий = Неопределено;
	Заголовок = Заголовок + " (" + _ОписаниеРазработки.НомерВерсии + " от " + _ОписаниеРазработки.ДатаВерсии + ")";
	
	ПутьКФормам = вПолучитьОбработку().Метаданные().ПолноеИмя() + ".Форма.";
	
	Если Параметры.Свойство("АдресаХранилищ") Тогда
		_АдресаХранилищ = вСкопироватьСтруктуру(Параметры.АдресаХранилищ);
	Иначе
		_АдресаХранилищ = новый Структура;
	КонецЕсли;
	
	Если не _АдресаХранилищ.Свойство("ОбщиеРеквизиты") Тогда
		_АдресаХранилищ.Вставить("ОбщиеРеквизиты", ПоместитьВоВременноеХранилище(-1, УникальныйИдентификатор));
	КонецЕсли;
	
	_БыстрыйВызовСервера = истина;
	_ПриЗаполненииОбрабатыватьТолькоВыделенныеСтроки = истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если мЗакрытьФормуБезВопросов = истина или _ЗадаватьВопросПриЗакрытии = ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если _ТабРегистры.НайтиСтроки(новый Структура("Изменен", истина)).Количество() <> 0 Тогда
		Если ЗавершениеРаботы = Неопределено Тогда
			// для старых версии платформы
			Отказ = истина;
			вПоказатьВопрос("вЗакрытьФорму", "Редактор движений будет закрыт. Продолжить?");
			Возврат;
		КонецЕсли;
		
		Если ЗавершениеРаботы = ложь Тогда
			Отказ = истина;
			вПоказатьВопрос("вЗакрытьФорму", "Редактор движений будет закрыт. Продолжить?");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура вЗакрытьФорму(РезультатВопроса, ДопПараметры = Неопределено) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		мЗакрытьФормуБезВопросов = истина;
		ЭтаФорма.Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	мТекСтрокаТаблицыРегистров = Неопределено;
	мТекСтрокаТаблицыРегистровСтарая = Неопределено;
	
	ПодключитьОбработчикОжидания("вПослеОткрытия", 0.1, истина);
КонецПроцедуры

&НаКлиенте
Процедура вПослеОткрытия() Экспорт
	_Обновить(Неопределено);
КонецПроцедуры


&НаКлиенте
Процедура мОбъектСсылкаПриИзменении(Элемент)
	_Обновить(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура мОбъектСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если мОбъектСсылка = Неопределено Тогда
		СтандартнаяОбработка = ложь;
		СтрукПарам = новый Структура("ЗакрыватьПриЗакрытииВладельца, ПереченьРазделов", истина, "Документы");
		ОткрытьФорму(ПутьКФормам + "ФормаВыбораОбъекта", СтрукПарам, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		Массив = новый Массив;
		Массив.Добавить(ТипЗнч(мОбъектСсылка));
		Элемент.ОграничениеТипа = новый ОписаниеТипов(Массив);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура мОбъектСсылкаОчистка(Элемент, СтандартнаяОбработка)
	Элемент.ОграничениеТипа = новый ОписаниеТипов();
КонецПроцедуры



&НаКлиенте
Функция вПроверитьРегистратора()
	Если не ЗначениеЗаполнено(мОбъектСсылка) Тогда
		вПоказатьПредупреждение("Не задан объект для записи движений!");
		Возврат ложь;
	КонецЕсли;
	
	Возврат истина;
КонецФункции

&НаКлиенте
Процедура _ОткрытьВНовомОкне(Команда)
	СтрукПарам = новый Структура("ПутьКФормам, мОбъектСсылка, АдресаХранилищ, ОписаниеРазработки", ПутьКФормам, мОбъектСсылка, _АдресаХранилищ, _ОписаниеРазработки);
	ОткрытьФорму(ПутьКФормам + "ФормаРедакторДвижений",СтрукПарам,,ТекущаяДата(),,,,РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаКлиенте
Процедура _Обновить(Команда)
	мТекСтрокаТаблицыРегистров = Неопределено;
	мТекСтрокаТаблицыРегистровСтарая = Неопределено;
	
	вОчиститьНаборыЗаписей();
	
	вОбновить();
	
	Элементы.ГруппаРегистры.Заголовок = "Движения документа (" + _ТабРегистры.Количество() + ")";
КонецПроцедуры

&НаКлиенте
Процедура _Записать(Команда)
	Если не вПроверитьРегистратора() Тогда
		Возврат;
	КонецЕсли;
	
	Значение = _ТабРегистры.НайтиСтроки(новый Структура("Записать", истина)).Количество();
	Если Значение = 0 Тогда
		вПоказатьПредупреждение("Не отмечены регистры для записи.");
		Возврат;
	КонецЕсли;
	
	вПоказатьВопрос("_ЗаписатьДалее", СтрШаблон("Отмеченные регистры (%1 шт) будут записаны в базу. Продолжить?", Значение));
КонецПроцедуры

&НаКлиенте
Процедура _ЗаписатьДалее(РезультатВопроса, ДопПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		вЗаписать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _СортироватьРегистрыСтандартно(Команда)
	_ТабРегистры.Сортировать("Изменен УБЫВ, Записать УБЫВ, ЧислоЗаписей УБЫВ, ПолноеИмя");
КонецПроцедуры

&НаКлиенте
Процедура _СнятьФлажки(Команда)
	Для каждого Стр из _ТабРегистры.НайтиСтроки(новый Структура("Записать", истина)) Цикл
		Стр.Записать = ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура _УстановитьФлажки(Команда)
	Для каждого Стр из _ТабРегистры.НайтиСтроки(новый Структура("Записать", ложь)) Цикл
		Стр.Записать = истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура _УстановитьФлажкиДляИзмененных(Команда)
	Для каждого Стр из _ТабРегистры.НайтиСтроки(новый Структура("Записать, Изменен", ложь, истина)) Цикл
		Стр.Записать = истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура _ОчиститьДвижения(Команда)
	Если не вПроверитьРегистратора() Тогда
		Возврат;
	КонецЕсли;
	
	Значение = Элементы._ТабРегистры.ВыделенныеСтроки;
	Если Значение.Количество() = 0 Тогда
		вПоказатьПредупреждение("Не отмечены регистры для очистки.");
		Возврат;
	КонецЕсли;
	
	вПоказатьВопрос("_ОчиститьДвиженияДалее", СтрШаблон("Выбранные регистры (%1 шт) будут очищены. Продолжить?", Значение.Количество()));
КонецПроцедуры

&НаКлиенте
Процедура _ОчиститьДвиженияДалее(РезультатВопроса, ДопПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВыделенныеСтроки = Элементы._ТабРегистры.ВыделенныеСтроки;
		Для каждого Элем из ВыделенныеСтроки Цикл
			СтрДанные = _ТабРегистры.НайтиПоИдентификатору(Элем);
			Если СтрДанные <> Неопределено Тогда
				ИмяРеквизита = вПолучитьИмяРеквизита(СтрДанные.ПолноеИмя);
				
				Попытка
					ТабДанные = ЭтаФорма[ИмяРеквизита];
					Если ТабДанные.Количество() <> 0 Тогда
						ТабДанные.Очистить();
						СтрДанные.Записать = истина;
						СтрДанные.Изменен = истина;
						СтрДанные.ЕстьЗаписи = ложь;
						СтрДанные.ЧислоЗаписей = 0;
					КонецЕсли;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура _ОбновитьНабор(Команда)
	ТекДанные = Элементы._ТабРегистры.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ИмяРеквизита = вПолучитьИмяРеквизита(ТекДанные.ПолноеИмя);
		
		Если _БыстрыйВызовСервера Тогда
			Массив = вПрочитатьНаборЗаписейВКоллекцию(мОбъектСсылка, ТекДанные.ВидРегистра, ТекДанные.Имя);
			
			Коллекция = ЭтаФорма[ИмяРеквизита];
			Коллекция.Очистить();
			
			Для каждого Элем из Массив Цикл
				ЗаполнитьЗначенияСвойств(Коллекция.Добавить(), Элем);
			КонецЦикла;
		Иначе
			вОбновитьНаборЗаписей(ТекДанные.ВидРегистра, ТекДанные.Имя);
		КонецЕсли;
		
		ТекДанные.Изменен = ложь;
		ТекДанные.Записать = ложь;
		ТекДанные.ЧислоЗаписей = ЭтаФорма[ИмяРеквизита].Количество();
		ТекДанные.ЕстьЗаписи = (ТекДанные.ЧислоЗаписей <> 0);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ЗаписатьНабор(Команда)
	Если не вПроверитьРегистратора() Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элементы._ТабРегистры.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		вПоказатьПредупреждение("Не задан набор записей для сохранения");
		Возврат;
	КонецЕсли;
	вПоказатьВопрос("_ЗаписатьНаборДалее", "Набор записей будет записан в базу. Продолжить?");
КонецПроцедуры

&НаКлиенте
Процедура _ЗаписатьНаборДалее(РезультатВопроса, ДопПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ТекДанные = Элементы._ТабРегистры.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Если вЗаписатьНаборЗаписей(ТекДанные.ВидРегистра, ТекДанные.Имя) Тогда
				_ОбновитьНабор(Неопределено);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ПереключитьАктивностьЗаписей(Команда)
	ТекДанные = Элементы._ТабРегистры.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ИмяРеквизита = вПолучитьИмяРеквизита(ТекДанные.ПолноеИмя);
		Если ЭтаФорма[ИмяРеквизита].Количество() <> 0 Тогда
			
			Для каждого Стр из ЭтаФорма[ИмяРеквизита] Цикл
				Стр.Активность = не Стр.Активность;
			КонецЦикла;
			
			НаборЗаписейПриИзменении(Элементы[ИмяРеквизита]);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ОткрытьОбъект(Команда)
	ТекДанные = Элементы._ТабРегистры.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ИмяРеквизита = вПолучитьИмяРеквизита(ТекДанные.ПолноеИмя);
		ТекТаб = ЭтаФорма[ИмяРеквизита];
		
		Если ТекТаб.Количество() > 0 Тогда
			ТекТабЭФ = Элементы[ИмяРеквизита];
			ТекПолеЭФ = ТекТабЭФ.ТекущийЭлемент;
			
			пПоле = Сред(ТекПолеЭФ.Имя, СтрДлина(ИмяРеквизита)+2);
			Значение = ТекТабЭФ.ТекущиеДанные[пПоле];
			
			Если ЗначениеЗаполнено(Значение) Тогда
				
				Если ТипЗнч(Значение) = Тип("ХранилищеЗначения") Тогда
					вПоказатьЗначениеХЗ(Значение);
					
				ИначеЕсли вЭтоОбъектМетаданных(ТипЗнч(Значение)) Тогда
					СтрукПарам = новый Структура("ПутьКФормам, мОбъектСсылка, АдресаХранилищ", ПутьКФормам, Значение, _АдресаХранилищ);
					ОткрытьФорму(ПутьКФормам + "ФормаОбъекта", СтрукПарам, ,Значение);
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ПоказатьТипЗначения(Команда)
	_ТипЗначенияТекущегоПоля = "";
	
	Значение = Неопределено;
	
	ТекДанные = Элементы._ТабРегистры.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ИмяРеквизита = вПолучитьИмяРеквизита(ТекДанные.ПолноеИмя);
		ТекТаб = ЭтаФорма[ИмяРеквизита];
		
		Если ТекТаб.Количество() > 0 Тогда
			ТекТабЭФ = Элементы[ИмяРеквизита];
			ТекПолеЭФ = ТекТабЭФ.ТекущийЭлемент;
			
			пПоле = Сред(ТекПолеЭФ.Имя, СтрДлина(ИмяРеквизита)+2);
			Значение = ТекТабЭФ.ТекущиеДанные[пПоле];
			
		КонецЕсли;
	КонецЕсли;
	
	Если Значение = Неопределено Тогда
		ИмяТипа = "Неопределено";
	Иначе
		ИмяТипа = вСформироватьИмяТипаПоЗначению(Значение);
	КонецЕсли;
	
	_ТипЗначенияТекущегоПоля = ИмяТипа;
КонецПроцедуры

&НаКлиенте
Процедура вПоказатьЗначениеХЗ(Значение)
	СтрукПарам = новый Структура("ПутьКФормам, ДанныеХЗ, АдресаХранилищ", ПутьКФормам, Значение, _АдресаХранилищ);
	ОткрытьФорму(ПутьКФормам + "ФормаОтображенияХЗ", СтрукПарам, ,ТекущаяДата());
КонецПроцедуры



&НаКлиентеНаСервереБезКонтекста
Функция вПолучитьИмяРеквизита(Знач ПолноеИмя)
	Возврат СтрЗаменить(ПолноеИмя, ".", "_");
КонецФункции

&НаКлиенте
Процедура вОчиститьНаборыЗаписей()
	Для каждого Стр из _ТабРегистры.НайтиСтроки(новый Структура("ЕстьРеквизитФормы", истина)) Цикл
		ИмяРеквизита = вПолучитьИмяРеквизита(Стр.ПолноеИмя);
		ЭтаФорма[ИмяРеквизита].Очистить();
		Стр.ЕстьЗаписи = ложь;
		Стр.ЧислоЗаписей = 0;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура вУдалитьРеквизитыНаборовЗаписей()
	МассивКСозданию = новый Массив;
	МассивКУдалению = новый Массив;
	
	Для каждого Стр из _ТабРегистры.НайтиСтроки(новый Структура("ЕстьРеквизитФормы", истина)) Цикл
		ИмяРеквизита = вПолучитьИмяРеквизита(Стр.ПолноеИмя);
		
		Если вПроверитьНаличиеРеквизита(ИмяРеквизита) Тогда
			МассивКУдалению.Добавить(ИмяРеквизита);
		КонецЕсли;
		Стр.ЕстьРеквизитФормы = ложь;
		
		ЭФ = Элементы.Найти("Стр_" + ИмяРеквизита);
		Если ЭФ <> Неопределено Тогда
			Элементы.Удалить(ЭФ);
		КонецЕсли;
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивКСозданию, МассивКУдалению);
КонецПроцедуры

&НаСервереБезКонтекста
Функция вЭтоОбъектМетаданных(Знач Тип)
	ОбъектМД = Метаданные.НайтиПоТипу(Тип);
	Возврат ( ОбъектМД <> Неопределено и не Метаданные.Перечисления.Содержит(ОбъектМД) );
КонецФункции

&НаСервереБезКонтекста
Функция вСформироватьИмяТипаПоЗначению(Знач Значение)
	пТип = ТипЗнч(Значение);
	
	ОбъектМД = Метаданные.НайтиПоТипу(пТип);
	Если ОбъектМД <> Неопределено Тогда
		ИмяТипа = ОбъектМД.ПолноеИмя();
	Иначе
		ИмяТипа = Строка(пТип);
	КонецЕсли;
	
	Возврат ИмяТипа;
КонецФункции

&НаСервереБезКонтекста
Функция вПрочитатьНаборЗаписей(Регистратор, ВидРегистра, ИмяРегистра)
	Запрос = новый Запрос;
	Запрос.УстановитьПараметр("ДокументРегистратор", Регистратор);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	т.*
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПланОплат КАК т
	|ГДЕ
	|	т.ДокументРегистратор = &ДокументРегистратор";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрНакопления.РасчетыСКлиентамиПланОплат", ВидРегистра + "." + ИмяРегистра);
	
	ТабРезультат = Запрос.Выполнить().Выгрузить();
	
	Возврат ТабРезультат;
КонецФункции

&НаСервереБезКонтекста
Функция вСоздатьНаборЗаписей(Регистратор, ВидРегистра, ИмяРегистра)
	Если ВидРегистра = "РегистрСведений" Тогда
		Менеджер = РегистрыСведений[ИмяРегистра];
	ИначеЕсли ВидРегистра = "РегистрНакопления" Тогда
		Менеджер = РегистрыНакопления[ИмяРегистра];
	ИначеЕсли ВидРегистра = "РегистрРасчета" Тогда
		Менеджер = РегистрыРасчета[ИмяРегистра];
	ИначеЕсли ВидРегистра = "РегистрБухгалтерии" Тогда
		Менеджер = РегистрыБухгалтерии[ИмяРегистра];
	Иначе
		Менеджер = Неопределено;
	КонецЕсли;
	
	Набор = Менеджер.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Регистратор);
	
	Возврат Набор;
КонецФункции

&НаСервереБезКонтекста
Функция вПрочитатьНаборЗаписейВКоллекцию(Знач Регистратор, Знач ВидРегистра, Знач ИмяРегистра)
	ТабРезультат = вПрочитатьНаборЗаписей(Регистратор, ВидРегистра, ИмяРегистра);
	
	Струк = новый Структура;
	
	Для каждого Элем из ТабРезультат.Колонки Цикл
		Струк.Вставить(Элем.Имя);
	КонецЦикла;
	
	Массив = новый Массив;
	
	Для каждого Стр из ТабРезультат Цикл
		НС = новый Структура;
		Для каждого Элем из Струк Цикл
			НС.Вставить(Элем.Ключ);
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(НС, Стр);
		Массив.Добавить(НС);
	КонецЦикла;
	
	Возврат Массив;
КонецФункции

&НаСервере
Процедура вОбновитьНаборЗаписей(Знач ВидРегистра, Знач ИмяРегистра)
	ТабРезультат = вПрочитатьНаборЗаписей(мОбъектСсылка, ВидРегистра, ИмяРегистра);
	ЗначениеВРеквизитФормы(ТабРезультат, вПолучитьИмяРеквизита(ВидРегистра + "." + ИмяРегистра));
КонецПроцедуры

&НаСервере
Функция вЗаписатьНаборЗаписей(Знач ВидРегистра, Знач ИмяРегистра)
	пПолноеИмя = ВидРегистра + "." + ИмяРегистра;
	пИмяРеквизита = вПолучитьИмяРеквизита(пПолноеИмя);
	
	Запрос = новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", мОбъектСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	т.Дата КАК Дата
	|ИЗ
	|	" + _ПолноеИмяДокумента + " КАК т
	|ГДЕ
	|	т.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	пПериод = ?(Выборка.Следующий(), Выборка.Дата, Неопределено);
	Если пПериод = Неопределено Тогда
		Сообщить("Не найден указанный документ!");
		Возврат ложь;
	КонецЕсли;
	
	Запрос = новый Запрос;
	Запрос.УстановитьПараметр("ДокументРегистратор", мОбъектСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	т.*
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПланОплат КАК т
	|ГДЕ
	|	т.ДокументРегистратор = &ДокументРегистратор";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрНакопления.РасчетыСКлиентамиПланОплат", пПолноеИмя);
	
	ТабЗаписиА = Запрос.Выполнить().Выгрузить();
	ТабРегистраторыА = ТабЗаписиА.Скопировать(, "Регистратор");
	ТабРегистраторыА.Свернуть("Регистратор");
	ТабЗаписиА.Индексы.Добавить("Регистратор");
	
	ТабЗаписиБ = РеквизитФормыВЗначение(пИмяРеквизита);
	ТабРегистраторыБ = ТабЗаписиБ.Скопировать(, "Регистратор");
	ТабРегистраторыБ.Свернуть("Регистратор");
	ТабЗаписиБ.Индексы.Добавить("Регистратор");
	
	ТабРегистраторыБ.Колонки.Добавить("Обработан", новый ОписаниеТипов("Булево"));
	ТабРегистраторыБ.Колонки.Добавить("Период", новый ОписаниеТипов("Дата"));
	
	НачатьТранзакцию();
	
	Для каждого СтрА из ТабРегистраторыА Цикл
		Набор = вСоздатьНаборЗаписей(СтрА.Регистратор, ВидРегистра, ИмяРегистра);
		
		Набор.Прочитать();
		ТабНабор = Набор.Выгрузить();
		ТабНабор.Индексы.Добавить("ДокументРегистратор");
		
		Для каждого Стр из ТабНабор.НайтиСтроки(новый Структура("ДокументРегистратор", мОбъектСсылка)) Цикл
			ТабНабор.Удалить(Стр);
		КонецЦикла;
		
		Для каждого СтрБ из ТабЗаписиБ.НайтиСтроки(новый Структура("Регистратор", СтрА.Регистратор)) Цикл
			НС = ТабНабор.Добавить();
			ЗаполнитьЗначенияСвойств(НС, СтрБ);
			НС.Регистратор = СтрА.Регистратор;
			НС.ДокументРегистратор = мОбъектСсылка;
			НС.Период = пПериод;
		КонецЦикла;
		
		Набор.Загрузить(ТабНабор);
		
		СтрБ = ТабРегистраторыБ.Найти(СтрА.Регистратор, "Регистратор");
		Если СтрБ <> Неопределено Тогда
			СтрБ.Обработан = истина;
		КонецЕсли;
		
		Попытка
			Если _ЗаписьВРежимеЗагрузки Тогда
				Набор.ОбменДанными.Загрузка = истина;
			КонецЕсли;
			Набор.Записать();
		Исключение
			Сообщить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОтменитьТранзакцию();
			
			Возврат ложь;
		КонецПопытки;
	КонецЦикла;
	
	Для каждого СтрА из ТабРегистраторыБ.НайтиСтроки(новый Структура("Обработан", ложь)) Цикл
		Набор = вСоздатьНаборЗаписей(СтрА.Регистратор, ВидРегистра, ИмяРегистра);
		
		Набор.Прочитать();
		ТабНабор = Набор.Выгрузить();
		
		Для каждого СтрБ из ТабЗаписиБ.НайтиСтроки(новый Структура("Регистратор", СтрА.Регистратор)) Цикл
			НС = ТабНабор.Добавить();
			ЗаполнитьЗначенияСвойств(НС, СтрБ);
			НС.Регистратор = СтрА.Регистратор;
			НС.ДокументРегистратор = мОбъектСсылка;
			НС.Период = пПериод;
		КонецЦикла;
		
		Набор.Загрузить(ТабНабор);
		
		Попытка
			Если _ЗаписьВРежимеЗагрузки Тогда
				Набор.ОбменДанными.Загрузка = истина;
			КонецЕсли;
			Набор.Записать();
		Исключение
			Сообщить(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОтменитьТранзакцию();
			
			Возврат ложь;
		КонецПопытки;
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Возврат истина;
КонецФункции

&НаСервере
Функция вЗаписать()
	НайденныеСтроки = _ТабРегистры.НайтиСтроки(новый Структура("Записать", истина));
	пЕстьТранзакция = (НайденныеСтроки.Количество() > 1);
	
	Если пЕстьТранзакция Тогда
		НачатьТранзакцию();
	КонецЕсли;
	
	Для каждого Стр из НайденныеСтроки Цикл
		Если не вЗаписатьНаборЗаписей(Стр.ВидРегистра, Стр.Имя) Тогда
			Если пЕстьТранзакция Тогда
				ОтменитьТранзакцию();
				Возврат ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если пЕстьТранзакция Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	Для каждого Стр из НайденныеСтроки Цикл
		ИмяРеквизита = вПолучитьИмяРеквизита(Стр.ПолноеИмя);
		
		вОбновитьНаборЗаписей(Стр.ВидРегистра, Стр.Имя);
		
		Стр.Изменен = ложь;
		Стр.Записать = ложь;
		Стр.ЧислоЗаписей = ЭтаФорма[ИмяРеквизита].Количество();
		Стр.ЕстьЗаписи = (Стр.ЧислоЗаписей <> 0);
	КонецЦикла;
	
	Возврат истина;
КонецФункции


&НаСервере
Процедура вСоздатьРеквизитыНаборовЗаписей(НадоСоздаватьРеквизиты = истина)
	ТипХЗ = Тип("ХранилищеЗначения");
	ТипТТ = Тип("Тип");
	ТипМВ = Тип("МоментВремени");
	
	СоотвДанные = новый Соответствие;
	
	МассивКСозданию = новый Массив;
	МассивКУдалению = новый Массив;
	
	Для каждого Стр из _ТабРегистры Цикл
		Стр.ЕстьРеквизитФормы = истина;
		
		ИмяРеквизита = вПолучитьИмяРеквизита(Стр.ПолноеИмя);
		
		Если НадоСоздаватьРеквизиты Тогда
			МассивКСозданию.Добавить(новый РеквизитФормы(ИмяРеквизита, новый ОписаниеТипов("ТаблицаЗначений"), , Стр.ПолноеИмя, ложь));
		КонецЕсли;
		
		ТабРезультат = вПрочитатьНаборЗаписей(мОбъектСсылка, Стр.ВидРегистра, Стр.Имя);
		СоотвДанные.Вставить(ИмяРеквизита, ТабРезультат);
		
		Стр.ЧислоЗаписей = ТабРезультат.Количество();
		Стр.ЕстьЗаписи = (Стр.ЧислоЗаписей <> 0);
		Стр.Изменен = ложь;
		Стр.Записать = ложь;
		
		Если НадоСоздаватьРеквизиты Тогда
			Для каждого Колонка из ТабРезультат.Колонки Цикл
				Если Колонка.ТипЗначения.СодержитТип(ТипХЗ) Тогда
					ТипЗначенияРеквизита = новый ОписаниеТипов;
				ИначеЕсли Колонка.ТипЗначения.СодержитТип(ТипТТ) Тогда
					ТипЗначенияРеквизита = новый ОписаниеТипов;
				ИначеЕсли Колонка.ТипЗначения.СодержитТип(ТипМВ) Тогда
					ТипЗначенияРеквизита = новый ОписаниеТипов;
				Иначе
					ТипЗначенияРеквизита = Колонка.ТипЗначения;
				КонецЕсли;
				МассивКСозданию.Добавить(новый РеквизитФормы(Колонка.Имя, ТипЗначенияРеквизита, ИмяРеквизита, Колонка.Заголовок, ложь));
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НадоСоздаватьРеквизиты Тогда
		ИзменитьРеквизиты(МассивКСозданию, МассивКУдалению);
	КонецЕсли;
	
	_ТабРегистры.Сортировать("Изменен УБЫВ, ЧислоЗаписей УБЫВ, ПолноеИмя");
	
	// создание элементов формы
	//СтрукСпецКолонки = новый Структура("Регистратор, МоментВремени");
	СтрукСпецКолонки = новый Структура("НомерСтроки, МоментВремени, ДокументРегистратор");
	
	Для каждого Элем из СоотвДанные Цикл
		ТабРезультат = Элем.Значение;
		ИмяРеквизита = СтрЗаменить(Элем.Ключ, ".", "_");
		
		ЗначениеВРеквизитФормы(Элем.Значение, Элем.Ключ);
		
		Если не НадоСоздаватьРеквизиты Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтраница = Элементы.Добавить("Стр_" + ИмяРеквизита, Тип("ГруппаФормы"), Элементы.СтраницыНаборыЗаписей);
		НоваяСтраница.Вид = ВидГруппыФормы.Страница;
		НоваяСтраница.Заголовок = "";
		НоваяСтраница.Видимость = истина;
		
		ЭлемТЗ = ЭтаФорма.Элементы.Добавить(ИмяРеквизита, Тип("ТаблицаФормы"), НоваяСтраница);
		ЭлемТЗ.ПутьКДанным = ИмяРеквизита;
		ЭлемТЗ.УстановитьДействие("ПриИзменении", "НаборЗаписейПриИзменении");
		
		Элем = ЭтаФорма.Элементы.Добавить("_" + ИмяРеквизита + "_ПереключитьАктивностьЗаписей", Тип("КнопкаФормы"), ЭлемТЗ.КоманднаяПанель);
		Элем.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		Элем.ИмяКоманды = "_ПереключитьАктивностьЗаписей";
		Элем.Видимость = ложь;
		
		Элем = ЭтаФорма.Элементы.Добавить("_" + ИмяРеквизита + "_ОткрытьОбъект", Тип("КнопкаФормы"), ЭлемТЗ.КоманднаяПанель);
		Элем.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		Элем.ИмяКоманды = "_ОткрытьОбъект";
		
		Элем = ЭтаФорма.Элементы.Добавить("_" + ИмяРеквизита + "_ОбновитьНабор", Тип("КнопкаФормы"), ЭлемТЗ.КоманднаяПанель);
		Элем.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		Элем.ИмяКоманды = "_ОбновитьНабор";
		
		Элем = ЭтаФорма.Элементы.Добавить("_" + ИмяРеквизита + "_ЗаписатьНабор", Тип("КнопкаФормы"), ЭлемТЗ.КоманднаяПанель);
		Элем.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		Элем.ИмяКоманды = "_ЗаписатьНабор";
		
		Для каждого Колонка из ТабРезультат.Колонки Цикл
			Если СтрукСпецКолонки.Свойство(Колонка.Имя) Тогда
				Продолжить;
			КонецЕсли;
			
			Элем = ЭтаФорма.Элементы.Добавить(ИмяРеквизита + "_" + Колонка.Имя, Тип("ПолеФормы"), ЭлемТЗ);
			Элем.ПутьКДанным = ИмяРеквизита + "." + Колонка.Имя;
			Элем.Вид = ВидПоляФормы.ПолеВвода;
			Элем.ДоступныеТипы = Колонка.ТипЗначения;
			
			Если Колонка.ТипЗначения.СодержитТип(ТипХЗ) Тогда // версия 033
				Элем.ТолькоПросмотр = истина;
			КонецЕсли;
			
			Если Колонка.Имя = "Активность" Тогда
				Элем.ТолькоПросмотр = истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция вПроверитьНаличиеРеквизита(ИмяРеквизита)
	Струк = новый Структура(ИмяРеквизита);
	ЗаполнитьЗначенияСвойств(Струк, ЭтаФорма);
	
	Возврат (Струк[ИмяРеквизита] <> Неопределено);
КонецФункции

&НаСервере
Процедура вОбновить()
	НадоСоздаватьРеквизиты = (ТипЗнч(мОбъектСсылка) <> ТипЗнч(мОбъектСсылкаПредыдущий));
	
	мОбъектСсылкаПредыдущий = мОбъектСсылка;
	
	Если НадоСоздаватьРеквизиты Тогда
		вУдалитьРеквизитыНаборовЗаписей();
		
		_ТабРегистры.Очистить();
		
		мТекСтрокаТаблицыРегистров = Неопределено;
		
		Если мОбъектСсылка <> Неопределено Тогда
			ОбъектМД = мОбъектСсылка.Метаданные();
			_ПолноеИмяДокумента = ОбъектМД.ПолноеИмя();
			
			пСтрук = вОпределитьДополнительныеРегистрыДокумента(_ПолноеИмяДокумента);
			Если пСтрук.ЕстьДанные Тогда
				Для каждого Элем из пСтрук.ДополнительныеРегистры Цикл
					НС = _ТабРегистры.Добавить();
					НС.Имя = Сред(Элем.Ключ, СтрНайти(Элем.Ключ, ".")+1);
					НС.Представление = Элем.Значение;
					НС.ПолноеИмя = Элем.Ключ;
					НС.ВидРегистра = Лев(НС.ПолноеИмя, СтрНайти(НС.ПолноеИмя, ".")-1);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		_ТабРегистры.Сортировать("ПолноеИмя");
	КонецЕсли;
	
	вСоздатьРеквизитыНаборовЗаписей(НадоСоздаватьРеквизиты);
КонецПроцедуры


&НаКлиенте
Процедура НаборЗаписейПриИзменении(Элемент)
	ТекДанные = Элементы._ТабРегистры.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекДанные.Изменен = истина;
		ТекДанные.Записать = истина;
		ТекДанные.ЧислоЗаписей = ЭтаФорма[Элемент.Имя].Количество();
		ТекДанные.ЕстьЗаписи = (ТекДанные.ЧислоЗаписей <> 0);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ТабРегистрыПриАктивизацииСтроки(Элемент)
	ТекСтрока = Элемент.ТекущаяСтрока;
	Если ТекСтрока <> мТекСтрокаТаблицыРегистров Тогда
		мТекСтрокаТаблицыРегистровСтарая = мТекСтрокаТаблицыРегистров;
		мТекСтрокаТаблицыРегистров = ТекСтрока;
		ПодключитьОбработчикОжидания("вПриАктивизацииСтрокиТаблицыРегистров", 0.1, истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура вПриАктивизацииСтрокиТаблицыРегистров() Экспорт
	Если мТекСтрокаТаблицыРегистровСтарая <> Неопределено Тогда
		ТекДанные = _ТабРегистры.НайтиПоИдентификатору(мТекСтрокаТаблицыРегистровСтарая);
		Если ТекДанные <> Неопределено Тогда
			ИмяРеквизита = вПолучитьИмяРеквизита(ТекДанные.ПолноеИмя);
		КонецЕсли;
	КонецЕсли;
	
	ТекДанные = Неопределено;
	Если мТекСтрокаТаблицыРегистров <> Неопределено Тогда
		ТекДанные = _ТабРегистры.НайтиПоИдентификатору(мТекСтрокаТаблицыРегистров);
		Если ТекДанные <> Неопределено Тогда
			ИмяРеквизита = вПолучитьИмяРеквизита(ТекДанные.ПолноеИмя);
			Элементы.СтраницыНаборыЗаписей.ТекущаяСтраница = Элементы["Стр_" + ИмяРеквизита];
		КонецЕсли;
	КонецЕсли;
	
	Если ТекДанные = Неопределено Тогда
		Элементы.СтраницыНаборыЗаписей.ТекущаяСтраница = Элементы.СтрПример;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура _ЗаполнитьДанныеТекущейКолонки(Команда)
	ТекДанные = Элементы._ТабРегистры.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ИмяРеквизита = вПолучитьИмяРеквизита(ТекДанные.ПолноеИмя);
		ТекТаб = ЭтаФорма[ИмяРеквизита];
		
		Если ТекТаб.Количество() > 0 Тогда
			ТекДанные.Записать = истина;
			ТекДанные.Изменен = истина;
			
			ТекТабЭФ = Элементы[ИмяРеквизита];
			ТекПолеЭФ = ТекТабЭФ.ТекущийЭлемент;
			
			пПоле = Сред(ТекПолеЭФ.Имя, СтрДлина(ИмяРеквизита)+2);
			
			Если _ПриЗаполненииОбрабатыватьТолькоВыделенныеСтроки Тогда
				Для каждого Элем из ТекТабЭФ.ВыделенныеСтроки Цикл
					Стр = ТекТаб.НайтиПоИдентификатору(Элем);
					Стр[пПоле] = _ЗначениеДляЗаполнения;
				КонецЦикла;
			Иначе
				Для каждого Стр из ТекТаб Цикл
					Стр[пПоле] = _ЗначениеДляЗаполнения;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ЗначениеДляЗаполненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если _ЗначениеДляЗаполнения = Неопределено Тогда
		СтандартнаяОбработка = ложь;
		СтрукПарам = новый Структура("ЗакрыватьПриЗакрытииВладельца, ТипыДляЗаполненияЗначений", истина, истина);
		ОткрытьФорму(ПутьКФормам + "ФормаВыбораОбъекта", СтрукПарам, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ИначеЕсли ТипЗнч(_ЗначениеДляЗаполнения) = Тип("УникальныйИдентификатор") Тогда
		СтандартнаяОбработка = ложь;
	Иначе
		Массив = новый Массив;
		Массив.Добавить(ТипЗнч(_ЗначениеДляЗаполнения));
		Элемент.ОграничениеТипа = новый ОписаниеТипов(Массив);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ЗначениеДляЗаполненияОчистка(Элемент, СтандартнаяОбработка)
	Элемент.ОграничениеТипа = новый ОписаниеТипов();
КонецПроцедуры



&НаСервереБезКонтекста
Функция вОпределитьДополнительныеРегистрыДокумента(Знач пПолноеИмяДокумента)
	пСоотв = новый Соответствие;
	
	пСтрук = новый Структура;
	пСтрук.Вставить("ЕстьДанные", ложь);
	пСтрук.Вставить("ДополнительныеРегистры", пСоотв);
	
	пРегистраторМД = Метаданные.Документы.Найти("РегистраторРасчетов");
	Если пРегистраторМД = Неопределено Тогда
		Возврат пСтрук;
	КонецЕсли;
	
	Если ТипЗнч(пПолноеИмяДокумента) <> Тип("Строка") Тогда
		пПолноеИмяДокумента = пПолноеИмяДокумента.Метаданные().ПолноеИмя();
		Если СтрНайти(пПолноеИмяДокумента, "Документ.") <> 1 Тогда
			Возврат пСтрук;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого ЭлемМД из пРегистраторМД.Движения Цикл
		пРеквизитМД = ЭлемМД.Реквизиты.Найти("ДокументРегистратор");
		Если пРеквизитМД <> Неопределено Тогда
			пИмяРегистра = ЭлемМД.ПолноеИмя();
			
			Для каждого пТип из пРеквизитМД.Тип.Типы() Цикл
				пДокМД = Метаданные.НайтиПоТипу(пТип);
				
				Если пДокМД <> Неопределено Тогда
					пИмяДокумента = пДокМД.ПолноеИмя();
					
					Если пИмяДокумента = пПолноеИмяДокумента и пИмяДокумента <> "Документ.РегистраторРасчетов" Тогда
						пСоотв[пИмяРегистра] = ЭлемМД.Представление();
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	пСтрук.ЕстьДанные = (пСоотв.Количество() <> 0);
	
	Возврат пСтрук;
КонецФункции
