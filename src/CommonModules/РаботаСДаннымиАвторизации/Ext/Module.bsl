// @strict-types


#Область ПрограммныйИнтерфейс

// Получить параметры авторизации.
// 
// Параметры:
//  ОбъектДоступа - СправочникСсылка.Кластеры1С
//  					- СправочникСсылка.ИнформационныеБазы
//  					- СправочникСсылка.ХранилищаКонфигураций
//  					- СправочникСсылка.СерверыБД
//  					- СправочникСсылка.ВебСерверы
//  ПользовательИБ - СправочникСсылка.ПользователиИБ
// 
// Возвращаемое значение:
//  Структура - Получить параметры авторизации:
// * ИмяПользователя - Строка -
// * Пароль - Строка -
Функция ПолучитьПараметрыАвторизации(ОбъектДоступа, ПользовательИБ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
						|	ХранилищеПаролей.ИмяПользователя,
						|	ХранилищеПаролей.Пароль
						|ИЗ
						|	РегистрСведений.ХранилищеПаролей КАК ХранилищеПаролей
						|ГДЕ
						|	ХранилищеПаролей.ПользовательИБ = &ПользовательИБ
						|	И ХранилищеПаролей.ОбъектДоступа = &ОбъектДоступа";
	
	Запрос.УстановитьПараметр("ОбъектДоступа", ОбъектДоступа);
	Запрос.УстановитьПараметр("ПользовательИБ", ПользовательИБ);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ПараметрыАвторизации = Новый Структура("ИмяПользователя, Пароль", "", "");
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыАвторизации, Выборка);
	КонецЕсли;

	Возврат ПараметрыАвторизации;
	
КонецФункции

// Установить параметры авторизации.
// 
// Параметры:
//  ОбъектДоступа - СправочникСсылка.Кластеры1С
//  					- СправочникСсылка.ИнформационныеБазы
//  					- СправочникСсылка.ХранилищаКонфигураций
//  					- СправочникСсылка.СерверыБД
//  					- СправочникСсылка.ВебСерверы
//  ПользовательИБ - СправочникСсылка.ПользователиИБ
Процедура УстановитьПараметрыАвторизации(ОбъектДоступа, ПользовательИБ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьРегистраПаролей = РегистрыСведений.ХранилищеПаролей.СоздатьМенеджерЗаписи();
	ЗаписьРегистраПаролей.ОбъектДоступа = ОбъектДоступа;
	ЗаписьРегистраПаролей.ПользовательИБ = ПользовательИБ;
	ЗаписьРегистраПаролей.Записать(Истина);
	
	УстановитьПривилегированныйРежим(Ложь);	
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти
