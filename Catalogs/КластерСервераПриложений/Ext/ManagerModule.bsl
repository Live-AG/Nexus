
// Получает идентификатор кластера по ссылке, объекту или структуре.
//
// Параметры:
//  ПараметрыКластера - Структура - СправочникОбъект.КластерСервераПриложений, СправочникСсылка.КластерСервераПриложений
//
// Возвращаемое значение:
//   Идентификатор - Строка - Уникальный идентификатор кластера
//
Функция ПолучитьИдентификаторКластера(Кластер) Экспорт
	
	ПараметрыАдминистрированияКластера = ПолучитьПараметрыАдминистрированияКластера(Кластер);
	
	Возврат АдминистрированиеКластера.ИдентификаторКластера(ПараметрыАдминистрированияКластера);
	
КонецФункции

Функция ПолучитьСостояниеКластера(Кластер) Экспорт
	
	Попытка
		ИдентификаторКластера = ПолучитьИдентификаторКластера(Кластер);	
	Исключение
		ИдентификаторКластера = Неопределено;
	КонецПопытки;
	
	Если Не ЗначениеЗаполнено(ИдентификаторКластера) Тогда

		Возврат Перечисления.СостоянияЭлементовКластера.НеАктивен;
		
	ИначеЕсли Кластер.ИдентификаторКластера = ИдентификаторКластера Тогда
		
		Возврат Перечисления.СостоянияЭлементовКластера.Активен;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПараметрыАдминистрированияКластера(Кластер) Экспорт
	
	ПараметрыАдминистрированияКластера = АдминистрированиеКластера.ПараметрыАдминистрированияКластера();
	ЗаполнитьЗначенияСвойств(ПараметрыАдминистрированияКластера, Кластер);
	
	Возврат ПараметрыАдминистрированияКластера;
		
КонецФункции

Функция ПолучитьМакетОписанияКластера(Кластер) Экспорт
	
	МакетСводнойИнформации = Справочники.КластерСервераПриложений.ПолучитьМакет("МакетСводнойИнформации");
	
	ОбластьЗаголовок				= МакетСводнойИнформации.ПолучитьОбласть("Заголовок");
	ОбластьСтрокаСоставаКластера	= МакетСводнойИнформации.ПолучитьОбласть("СтрокаСоставаКластера");
	ОбластьПодробнее				= МакетСводнойИнформации.ПолучитьОбласть("ОбластьПодробнее");	
	ОбластьБазыЗаголовок			= МакетСводнойИнформации.ПолучитьОбласть("БазыЗаголовок");
	ОбластьБазыСтрока				= МакетСводнойИнформации.ПолучитьОбласть("БазыСтрока");
	
	ТабличныйДокументОписание = Новый ТабличныйДокумент();
	ТабличныйДокументОписание.Вывести(ОбластьЗаголовок);
	
	ПараметрыАдминистрированияКластера = ПолучитьПараметрыАдминистрированияКластера(Кластер);
	
	ОписаниеКластераМассив = АдминистрированиеКластера.СвойстваКластеров(ПараметрыАдминистрированияКластера);
	
	Для Каждого ЭлементМассиваКластеров Из ОписаниеКластераМассив Цикл
		
		ОбластьСтрокаСоставаКластера.Параметры.ИмяКластера		= ЭлементМассиваКластеров["name"];  	
		ОбластьСтрокаСоставаКластера.Параметры.ИмяКомпьютера	= ЭлементМассиваКластеров["host"];
		ОбластьСтрокаСоставаКластера.Параметры.ПортКластера 	= ЭлементМассиваКластеров["port"]; 
		ОбластьСтрокаСоставаКластера.Параметры.Идинтификатор	= ЭлементМассиваКластеров["cluster"]; 
		ТабличныйДокументОписание.Вывести(ОбластьСтрокаСоставаКластера);
		
		ОбластьПодробнее.Параметры.ОписаниеКластера = Новый Структура("ПараметрыКластера", ЭлементМассиваКластеров);
		ТабличныйДокументОписание.Вывести(ОбластьПодробнее);
		
	КонецЦикла;
	
	МассивБазКластера = АдминистрированиеКластера.СвойстваИнформационныхБаз(Кластер.ИдентификаторКластера, 
																				 ПараметрыАдминистрированияКластера);

	ТабличныйДокументОписание.Вывести(ОбластьБазыЗаголовок);

	Для Каждого БазаКластера Из МассивБазКластера Цикл
		
		ЗарегестрированнаяБаза = Справочники.ИнформационныеБазы.НайтиПоРеквизиту("ИдентификаторБазы", 
																						БазаКластера["infobase"]);
		
		Если Не ЗначениеЗаполнено(ЗарегестрированнаяБаза) Тогда
			ОбластьБазыСтрока.Параметры.НаименованиеБазы = БазаКластера["name"];
			ОбластьБазыСтрока.Параметры.ПараметрыБазы = Новый Структура("ПараметрыБазы", БазаКластера);	
			ТабличныйДокументОписание.Вывести(ОбластьБазыСтрока);
		КонецЕсли;
					
	КонецЦикла;
	
	Возврат ТабличныйДокументОписание;
	
КонецФункции