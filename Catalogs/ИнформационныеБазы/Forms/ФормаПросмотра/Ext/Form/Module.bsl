 
 &НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(ТекущаяСтраницаПараметров) Тогда
		
		ТекущаяСтраницаПараметров = "ГруппаИнформация";
		
	КонецЕсли;    
	
	//СводнаяИнформация = Справочники.ИнформационныеБазы.ПолучитьМакет("МакетПоказателей");
	
	//Отладка
	УстановитьОтображениеНезаполненныхЭлементов();	
	
	ЖурналРегистрации = "ClickHouse";
	
	ОбъемБазы = "4.7 Гб (из 11 Гб)";
	КоличествоАктивныхСеансов = 18;
	Объект.ИспользуетсяПо = ТекущаяДата();
	
	ОтобразитьГрафикАктивности();
	
	Элементы.ГруппаАдминистрированиеДекорация.Видимость = Ложь;
	
	ОтобразитьДлительныеОперацииПолученияСвойств(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
КонецПроцедуры   
 
&НаСервере
Процедура УстановитьОтображениеНезаполненныхЭлементов()
	
	ОформлениеСсылки = Новый Структура("Шрифт, ЦветТекста", Новый Шрифт(, 11, , , Истина), ЦветаСтиля.ГиперссылкаЦвет);
	ОформлениеПустойСсылки = Новый Структура("Шрифт, ЦветТекста", Новый Шрифт(, 11, , , Истина), ЦветаСтиля.ЦветПустойГиперссылки);
	
	//СписокПроверяемыхРеквизитов = Новый Соответствие;
	//СписокПроверяемыхРеквизитов.Вставить("Конфигурация", "ВерсияКонфигурации");
	//СписокПроверяемыхРеквизитов.Вставить("ДатаСоздания", "ДатаСоздания");
	//СписокПроверяемыхРеквизитов.Вставить("ИспользуетсяПо", "ИспользуетсяПо");
	//СписокПроверяемыхРеквизитов.Вставить("НазначениеИБ", "Назначение");
	//СписокПроверяемыхРеквизитов.Вставить("Ответственный", "Ответственный");
	//СписокПроверяемыхРеквизитов.Вставить("Проект", "Проект");
	//СписокПроверяемыхРеквизитов.Вставить("ВебСервер", "ВебСервер");
	//СписокПроверяемыхРеквизитов.Вставить("ХранилищеКонфигурации", "ХранилищеКонфигурации");

	Если ЗначениеЗаполнено(Объект.ВерсияКонфигурации) Тогда
		Элементы.ДекорацияКонфигурацияПустая.Видимость = Ложь;
		ЭтотОбъект.Конфигурация = Новый ФорматированнаяСтрока(Строка(Объект.ВерсияКонфигурации));
	Иначе                                                                             
		Элементы.ДекорацияКонфигурацияПустая.Видимость = Истина;
		ЭтотОбъект.Конфигурация = Новый ФорматированнаяСтрока("<Не заполнено>");
	КонецЕсли;

КонецПроцедуры // УстановитьОтображениеНезаполненныхЭлементов()

&НаКлиенте
Процедура КонфигурацияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ВерсияКонфигурации) Тогда
		
		ОткрытьФорму("Справочник.ВерсииКонфигураций.ФормаОбъекта", 
					Новый Структура("Ключ", Объект.ВерсияКонфигурации), 
					Элемент, ЭтаФорма, 
					, , , 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе                                                                                                                 
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ИмяЭлемента", "Конфигурация");
		СтруктураПараметров.Вставить("ИмяРеквизита", "ВерсияКонфигурации");
		ОписаниеОпопвещенияВыбора = Новый ОписаниеОповещения("ОбработкаВыбораЗначенияРеквизита", ЭтотОбъект, СтруктураПараметров);
		
		ПараметрыФормыВыбора = Новый Структура;
		ПараметрыФормыВыбора.Вставить("РежимВыбора", Истина);
		
		ОткрытьФорму("Справочник.ВерсииКонфигураций.ФормаВыбора", 
					ПараметрыФормыВыбора, 
					Элемент, ЭтаФорма, 
					, ,
					ОписаниеОпопвещенияВыбора,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаВыбораЗначенияРеквизита(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат) Тогда
		Объект[ДополнительныеПараметры.ИмяРеквизита] = Результат;  
		Записать(Новый Структура("ЗаписьВФормеПросмотра"));
		Элементы.ДекорацияКонфигурацияПустая.Видимость = Ложь;
		ЭтотОбъект[ДополнительныеПараметры.ИмяЭлемента] = Новый ФорматированнаяСтрока(Строка(Результат), 
																				Новый Шрифт(, 12, , , Истина), 
																				);   
	КонецЕсли;	
	
КонецПроцедуры // ОбработкаВыбораЗначенияРеквизита()     

&НаСервере
Процедура ОтобразитьГрафикАктивности()
	
	Справочники.ИнформационныеБазы.ПолучитьГрафикПоказателейАктивности(Объект.Ссылка, СводнаяИнформация);

КонецПроцедуры // ОтобразитьГрафикАктивности()

&НаКлиенте
Процедура КомандаРедактировать(Команда)

	ПолучитьСвойстваИнформационнойБазы();
	//Прототип_ПолучитьПараметрыКонфигурацииНаСервере(Объект.Ссылка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура Прототип_ПолучитьПараметрыКонфигурацииНаСервере(ИнформационнаяБаза)
	
	КаталогФайловБазы = КаталогВременныхФайлов() + Строка(Новый УникальныйИдентификатор()) + ПолучитьРазделительПутиСервера(); 
	
	СоздатьКаталог(КаталогФайловБазы);
	
	
	
	
	УдалитьФайлы(КаталогФайловБазы);	
	

КонецПроцедуры // Прототип_ПолучитьПараметрыКонфигурацииНаСервере()

&НаСервере
Процедура ПолучитьСвойстваИнформационнойБазы()
	
	//#TODO Сделать длительной операцией
	
	Отказ = Ложь;
	Адимнистрирование_ИнформационнаяБаза = АдминистрированиеИнформационныхБаз.ПолучитьАдминистрированиеИнформационнойБазы(Объект.Ссылка, Отказ);
	
	Если Отказ Тогда 
		Элементы.ГруппаАдминистрированиеДекорация.Видимость = Истина;
		Возврат;                                               
	Иначе
		Элементы.ГруппаАдминистрированиеДекорация.Видимость = Ложь;
	КонецЕсли;
	
	БлокировкаРегламентныхЗаданий	= Адимнистрирование_ИнформационнаяБаза.БлокировкаРегламентныхЗаданий;
	БлокировкаНачалаСеансов		= Адимнистрирование_ИнформационнаяБаза.ВключенаБлокировкаНачалаСеансов;
	
	СеансыИнформационнойБазы = Адимнистрирование_ИнформационнаяБаза.ПолучитьСеансы();
	СчетчикСеансов = 0;
	
	Для Каждого СеансМассива Из СеансыИнформационнойБазы Цикл
		Если ПроверитьИмяМассива(СеансМассива.ИмяПриложения) Тогда
			СчетчикСеансов = СчетчикСеансов + 1;
		КонецЕсли;
	КонецЦикла;
	
	КоличествоАктивныхСеансов = СчетчикСеансов;	
	
	ОтобразитьДлительныеОперацииПолученияСвойств(Ложь);
	
КонецПроцедуры  

&НаСервереБезКонтекста
Функция ПроверитьИмяМассива(ИмяПриложения)

	Возврат ИмяПриложения = "1CV8"
			Или ИмяПриложения = "1CV8C"
			Или ИмяПриложения = "Designer";

КонецФункции // ПроверитьИмяМассива()   
		
&НаСервере
Процедура ОтобразитьДлительныеОперацииПолученияСвойств(ДлительнаяОперацияАктивна)
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить("ОбъемБазы");
	МассивРеквизитов.Добавить("КоличествоАктивныхСеансов");
	МассивРеквизитов.Добавить("БлокировкаНачалаСеансов");
	МассивРеквизитов.Добавить("БлокировкаРегламентныхЗаданий");
	
	Для Каждого ЭлементМассива Из МассивРеквизитов Цикл
		Элементы[ЭлементМассива].Видимость = Не ДлительнаяОперацияАктивна;
		Элементы["Декорация" + ЭлементМассива].Видимость = ДлительнаяОперацияАктивна;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура БлокировкаРегламентныхЗаданийПриИзменении(Элемент)
	
	ОписаниеОбработчикаВопроса = Новый ОписаниеОповещения("ИзменениеБлокировкиРегламентныхЗаданий", ЭтотОбъект, БлокировкаРегламентныхЗаданий); 
	ТекстВопроса = ?(БлокировкаРегламентныхЗаданий = Истина, "Установить блокировку?", "Снять блокировку?");
	ПоказатьВопрос(ОписаниеОбработчикаВопроса, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , , "Установка блокировки");
	
КонецПроцедуры  

&НаКлиенте
Процедура ИзменениеБлокировкиРегламентныхЗаданий(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УстановитьБлокировкуРегламентныхЗаданийНаСервере(Объект.Ссылка, БлокировкаРегламентныхЗаданий);
	Иначе
		БлокировкаРегламентныхЗаданий = Не БлокировкаРегламентныхЗаданий;
	КонецЕсли;

КонецПроцедуры // ИзменениеБлокировкиРегламентныхЗаданий()

&НаСервереБезКонтекста
Процедура УстановитьБлокировкуРегламентныхЗаданийНаСервере(ИнформационнаяБаза, Заблокировать)

	АдминистрированиеИнформационныхБаз.УстановитьБлокировкуРегламентныхЗаданий(ИнформационнаяБаза, Заблокировать);					

КонецПроцедуры // УстановитьБлокировкуРегламентныхЗаданийНаСервере()




   
