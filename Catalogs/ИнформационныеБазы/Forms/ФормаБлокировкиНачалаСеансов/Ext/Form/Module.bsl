
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.СтруктураПараметровБлокировки) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СтруктураПараметровБлокировки);
	КонецЕсли;
	
	ВремяНачалаБлокировки = ТекущаяДатаСеанса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтобразитьДобавленныйПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановить(Команда)
	
	Если ВремяНачалаБлокировки > ВремяОкончанияБлокировки 
		И ЗначениеЗаполнено(ВремяОкончанияБлокировки) Тогда
		
		ПоказатьПредупреждение(, "Время начала не может быть больше чм время окончания блокировки!");
		Возврат;
		
	КонецЕсли;
	
	СтруктураПараметровБлокировки = УстановитьБлокировкуНачалаСеансовНаСервере();
	Закрыть(СтруктураПараметровБлокировки);
	
КонецПроцедуры

&НаСервере
Функция УстановитьБлокировкуНачалаСеансовНаСервере()

	СтруктураПараметровБлокировкиБазы = АдминистрированиеИнформационныхБаз.ПолучитьСтруктуруПараметорвБлокировкиБазы();
	СтруктураПараметровБлокировкиБазы.ВключенаБлокировкаНачалаСеансов	= Истина;
	СтруктураПараметровБлокировкиБазы.ВремяНачалаБлокировки			= НачалоМинуты(ВремяНачалаБлокировки);
	СтруктураПараметровБлокировкиБазы.ВремяОкончанияБлокировки			= НачалоМинуты(ВремяОкончанияБлокировки);
	СтруктураПараметровБлокировкиБазы.КодРазрешенияНачалаСеансов		= КодРазрешенияНачалаСеансов;
	СтруктураПараметровБлокировкиБазы.ПараметрБлокировки				= ПараметрБлокировки;
	СтруктураПараметровБлокировкиБазы.СообщениеБлокировки				= СообщениеБлокировки;
	
	АдминистрированиеИнформационныхБаз.УстановитьБлокировкуНачалаСеансов(Объект.Ссылка, СтруктураПараметровБлокировкиБазы);
	
	Возврат СтруктураПараметровБлокировкиБазы;
	
КонецФункции // УстановитьБлокировкуНачалаСеансовНаСервере()

&НаКлиенте
Процедура ПериодБлокировкиКонецПриИзменении(Элемент)
	
	ОтобразитьДобавленныйПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавляемыйПериодПриИзменении(Элемент)
	
	ОбработатьИзменениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшитьИнтервал(Команда)
	
	ДобавляемыйПериод = Макс(ДобавляемыйПериод - 10, 0);
	ОбработатьИзменениеПериода();	
	
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьИнтервал(Команда)
	
	ДобавляемыйПериод = Мин(ДобавляемыйПериод + 10, 180);
	ОбработатьИзменениеПериода();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеПериода()

	СекундВМинуте = 60;
	ВремяОкончанияБлокировки = ВремяНачалаБлокировки + ДобавляемыйПериод * СекундВМинуте;

КонецПроцедуры // ОбработатьИзменениеПериода()

&НаКлиенте
Процедура ОтобразитьДобавленныйПериод()

	СекундВМинуте = 60;
	ДобавляемыйПериод = Макс((ВремяОкончанияБлокировки - ВремяНачалаБлокировки) / СекундВМинуте, 0);	

КонецПроцедуры // ОтобразитьДобавленныйПериод()

&НаКлиенте
Процедура ПериодБлокировкиНачалоПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ВремяНачалаБлокировки) И ЗначениеЗаполнено(ВремяОкончанияБлокировки) Тогда
		
		ОбработатьИзменениеПериода();
		
	КонецЕсли;
	
КонецПроцедуры



// @strict-types


//#Область ОписаниеПеременных

//#КонецОбласти

//#Область ОбработчикиСобытийФормы

//// Код процедур и функций

//#КонецОбласти

//#Область ОбработчикиСобытийЭлементовШапкиФормы

//// Код процедур и функций

//#КонецОбласти

//#Область ОбработчикиСобытийЭлементовТаблицыФормы//<ИмяТаблицыФормы>

//// Код процедур и функций

//#КонецОбласти

//#Область ОбработчикиКомандФормы

//// Код процедур и функций

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

//// Код процедур и функций

//#КонецОбласти
