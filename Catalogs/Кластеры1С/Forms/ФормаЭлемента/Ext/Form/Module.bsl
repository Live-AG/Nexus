
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьОтображениеЭлементов();
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСвойстваИнформационныхБаз()

	//ПараметрыАдминистрированияКластера = ПолучитьПараметрыАдминистрированияКластера();
	//Возврат АдминистрированиеКластера.СвойстваИнформационныхБаз(Объект.ИдентификаторКластера, ПараметрыАдминистрированияКластера);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОтображениеЭлементов()

		
КонецПроцедуры

&НаКлиенте
Процедура ТипПодключенияПриИзменении(Элемент)
	
	ОбновитьОтображениеЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодключение(Команда)
	
	УстановитьПодключение();	

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПодключение()
	
	Отказ = Ложь;

	Если Не ЗначениеЗаполнено(Объект.АдресСервераАдминистрирования) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнен адрес сервера", СтатусСообщения.Важное, , , , Отказ);
	КонецЕсли;  
	
	Если Не ЗначениеЗаполнено(Объект.ПортСервераАдминистрирования) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнен порт сервера", СтатусСообщения.Важное, , , , Отказ);
	КонецЕсли;

	Если Не Отказ Тогда 
		ПолучитьИдентификаторНаСервере();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ИдентификаторКластера) Тогда
		ПоказатьПредупреждение(, "Успешное подключение");
	Иначе
		ПоказатьПредупреждение(, "Не удалось подключиться");
	КонецЕсли;
	 	
КонецПроцедуры

&НаСервере
Функция ПолучитьИдентификаторНаСервере()
	
	ПараметрыКластера = АдминистрированиеСерверов.ПолучитьПараметрыКластера(Объект);
	
	Объект.ИдентификаторКластера = ПараметрыКластера.ИдентификаторКластера;
	Объект.ВерсияПлатформы = Справочники.ВерсииПлатформы.НайтиПоНаименованию(ПараметрыКластера.ВерсияПлатформы);	
	
	Объект.Наименование = ПараметрыКластера.ИмяКомпьютера;
	//#REF
	//---- Если кластеров на сервере несколько тогда предлагается выбрать кластер и присвивается имя кластера, 
	//		если кластер один, то присваивается имя компьютера
	//		
	//Объект.Наименование = ?(ПараметрыКластера.ИмяКомпьютера = ПараметрыКластера.Имя, 
	//						ПараметрыКластера.Имя,
	//						ПараметрыКластера.Имя + " (" + ПараметрыКластера.ИмяКомпьютера + ")");
							
	Объект.ПортКластера = ПараметрыКластера.Порт;
	
	СоздатьБазыПоДаннымКластера(Объект.Ссылка);
	
КонецФункции   

&НаСервере
Процедура СоздатьБазыПоДаннымКластера(Кластер)
	
	//СтруктураПараметров = Новый Структура("ПарольСервераАдминистрирования,
	//								|ПарольСУБД,
	//								|ПарольЦентральногоСервера,
	//								|ПользовательИБ,
	//								|ПользовательСервераАдминистрирования,
	//								|ПользовательСУБД,
	//								|ПользовательЦентральногоСервер,
	//								|ПарольИБ"); 
	
	СтрукутараПараметров = Константы.ОбщиеПараметрыАутентификации.Получить().Получить();
	
	ПараметрыКластера = АдминистрированиеСерверов.ПолучитьПараметрыКластера(Кластер);
	
	Для Каждого АдминистрированиеБазыДанных Из ПараметрыКластера.ИнформационныеБазы Цикл
		
		ИнформационнаяБазаСсылка = Справочники.ИнформационныеБазы.НайтиПоРеквизиту("ИдентификаторБазы", АдминистрированиеБазыДанных.ИдентификаторИнформационнойБазы);
		Если ЗначениеЗаполнено(ИнформационнаяБазаСсылка) Тогда
			Продолжить;
		Иначе
			ИнформационнаяБаза = Справочники.ИнформационныеБазы.СоздатьЭлемент();
		КонецЕсли;
		
		Попытка
			АдминистрированиеБазыДанных.ВыполнитьАутентификацию("", "");
		Исключение
			АдминистрированиеБазыДанных.ВыполнитьАутентификацию(СтрукутараПараметров.ПользовательИБ, СтрукутараПараметров.ПарольИБ);
		КонецПопытки;
		
		ИнформационнаяБаза.Владелец		= Кластер;
		ИнформационнаяБаза.Наименование	= АдминистрированиеБазыДанных.Имя;
		ИнформационнаяБаза.СерверБД		= Справочники.СерверыБД.НайтиПоНаименованию(АдминистрированиеБазыДанных.СерверБазДанных);
		ИнформационнаяБаза.ИмяНаСервереБД	= АдминистрированиеБазыДанных.ИмяБазыДанных;
		
		ИнформационнаяБаза.ИдентификаторБазы		= АдминистрированиеБазыДанных.ИдентификаторИнформационнойБазы;
		ИнформационнаяБаза.ИмяАдминистратораИБ		= АдминистрированиеБазыДанных.ПользовательБазыДанных;
		ИнформационнаяБаза.ПарольАдминистратораИБ	= АдминистрированиеБазыДанных.ПарольПользователяБазыДанных;
		
		ИнформационнаяБаза.ОписаниеВКластере = АдминистрированиеБазыДанных.Описание;    
		
		ИнформационнаяБаза.Записать();
		
	КонецЦикла;
	
КонецПроцедуры
	

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.ИдентификаторКластера) Тогда
		//УстановитьПодключение();		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСводнойИнформацииОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОбработки = Неопределено;
	Если Расшифровка.Свойство("ПараметрыБазы", ПараметрыОбработки) Тогда
		//ОбработатьРегистрациюИнформационнойБазы(ПараметрыОбработки);
		ДополнительныеПараметры = Новый Структура; 
		ДополнительныеПараметры.Вставить("ПараметрыБазы", ПараметрыОбработки);
		ДополнительныеПараметры.Вставить("Кластер", Объект.Ссылка);
		
		ОткрытьФорму("Справочник.ИнформационныеБазы.ФормаОбъекта", Новый Структура("ДополнительныеПараметры", ДополнительныеПараметры));
	КонецЕсли;
	
КонецПроцедуры



