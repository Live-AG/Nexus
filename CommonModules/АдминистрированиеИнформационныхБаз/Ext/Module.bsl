

//// Возвращает путь к консольному клиенту сервера администрирования.
////
//// Возвращаемое значение:
////   Строка
////
//Функция ПутьККлиентуСервераАдминистрирования() Экспорт
//	
//	КаталогЗапуска = КаталогИсполняемыхФайловПлатформы();
//	Клиент = КаталогЗапуска + "ibcmd";
//	
//	Возврат Клиент;
//	
//КонецФункции

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

//Функция КаталогИсполняемыхФайловПлатформы()
//	
//	Результат = КаталогПрограммы();
//	СимволРазделителя = ПолучитьРазделительПути();
//	
//	Если Прав(Результат, 1) <> СимволРазделителя Тогда
//		Результат = Результат + СимволРазделителя;
//	КонецЕсли;
//	
//	Возврат Результат;
//	
//КонецФункции


//Функция СоздатьИнформационнуюБазу(Знач ПараметрыАдминистрированияКластера, Знач ПараметрыАдминистрированияИБ, Знач Словарь) Экспорт //Nexus +Экспорт
//	
//	//ibcmd infobase create --dbms=mssqlserver --db-server=dbServerName --db-user=dbUser --db-pwd=dbUserPassword --db-name=my-db --name=docsIB --create-database --load="D:\Cfgs\MyApp\1Cv8.cf" --apply
//	Команда = "infobase info --infobase=%1 --infobase-user=%2 --infobase-pwd=%3";
//	ПодставитьПараметрыВКоманду(Команда, 
//		ИдентификаторИнформационнойБазы, 
//		ПараметрыАдминистрированияИБ.ИмяАдминистратораИнформационнойБазы, 
//		ПараметрыАдминистрированияИБ.ПарольАдминистратораИнформационнойБазы);
//		
//	Результат = ЗапуститьКоманду(Команда + " " + ПараметрыКластера, ПараметрыАдминистрированияКластера, Словарь, , ТипыСвойствИнформационнойБазы());
//	
//	Возврат Результат[0];
//	
//КонецФункции  

//#КонецОбласти   

Функция ПолучитьСтруктуруПараметровИнформационнойБазы()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресСервераАдминистрирования"); 	СтруктураПараметров.Вставить("ПортСервераАдминистрирования"); 	СтруктураПараметров.Вставить("ПользовательЦентральногоСервер"); 	СтруктураПараметров.Вставить("ПарольЦентральногоСервера"); 	СтруктураПараметров.Вставить("СерверБД"); 	СтруктураПараметров.Вставить("БазаДанных"); 	СтруктураПараметров.Вставить("ИмяАдминистратораСУБД"); 	СтруктураПараметров.Вставить("ПарольАдминистратораСУБД"); 	СтруктураПараметров.Вставить("АдресКластера"); 	СтруктураПараметров.Вставить("ПортКластера"); 	СтруктураПараметров.Вставить("ИмяИБ"); 	СтруктураПараметров.Вставить("ИмяПользователяИБ"); 	СтруктураПараметров.Вставить("ПарольПользователяИБ"); 
	
	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровИнформационнойБазы()

Функция ПолучитьПараметрыИнформационнойБазы(ИнформационнаяБаза) Экспорт
	
	//#TODO
	СтруктураПараметров = ПолучитьСтруктуруПараметровИнформационнойБазы();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИнформационныеБазы.Владелец.АдресСервераАдминистрирования КАК АдресСервераАдминистрирования,
	               |	ИнформационныеБазы.Владелец.ПортСервераАдминистрирования КАК ПортСервераАдминистрирования,
	               |	ИнформационныеБазы.Владелец.ПользовательЦентральногоСервер КАК ПользовательЦентральногоСервер,
	               |	ИнформационныеБазы.Владелец.ПарольЦентральногоСервера КАК ПарольЦентральногоСервера,
	               |	ИнформационныеБазы.Владелец.АдресКластера КАК АдресКластера,
	               |	ИнформационныеБазы.Владелец.ПортКластера КАК ПортКластера,
	               |	ИнформационныеБазы.Владелец.ИмяАдминистратораКластера КАК ИмяАдминистратораКластера,
	               |	ИнформационныеБазы.Владелец.ПарольАдминистратораКластера КАК ПарольАдминистратораКластера,
	               |	ИнформационныеБазы.Владелец.РабочиеСерверыКластера.(
	               |		Имя КАК РабочиеСераерыИмя,
	               |		Порт КАК РабочиеСераерыПорт
	               |	) КАК РабочиеСераеры,
	               |	ИнформационныеБазы.ИмяИБ КАК ИмяИБ,
	               |	ИнформационныеБазы.СерверБД.ИмяСервера КАК СерверБД,
	               |	ИнформационныеБазы.СерверБД.ИмяАдминистратораСУБД КАК ИмяАдминистратораСУБД,
	               |	ИнформационныеБазы.СерверБД.ПарольАдминистратораСУБД КАК ПарольАдминистратораСУБД,
	               |	ИнформационныеБазы.БазаДанных КАК БазаДанных,
	               |	ИнформационныеБазы.ИмяПользователяИБ КАК ИмяПользователяИБ,
	               |	ИнформационныеБазы.ПарольПользователяИБ КАК ПарольПользователяИБ
	               |ИЗ
	               |	Справочник.ИнформационныеБазы КАК ИнформационныеБазы
	               |ГДЕ
	               |	ИнформационныеБазы.Ссылка = &ИнформационнаяБаза";
	
	Запрос.УстановитьПараметр("ИнформационнаяБаза", ИнформационнаяБаза);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураПараметров, Выборка); 
		Для Каждого Сервер Из Выборка.РабочиеСераеры Цикл

						
			
		КонецЦикла;
		
	КонецЕсли;   
	
	Возврат СтруктураПараметров;
	
КонецФункции // ПолучитьПараметрыИнформационнойБазы()

Функция ПолучитьСвойстваИнформационнойБазы(ИнформационнаяБаза, Отказ = Ложь) Экспорт
	
	ИдентификаторИнформационнойБазы = ИнформационнаяБаза.ИдентификаторБазы;
	МассивИнформационныхБаз = АдминистрированиеСерверов.ПолучитьБазыКластера(ИнформационнаяБаза.Владелец);
	Для Каждого АдминистрированиеИнформационнойБазы Из МассивИнформационныхБаз Цикл
		
		Если АдминистрированиеИнформационнойБазы.ИдентификаторИнформационнойБазы = ИдентификаторИнформационнойБазы Тогда
			Попытка
				АдминистрированиеИнформационнойБазы.ВыполнитьАутентификацию(ИнформационнаяБаза.ИмяПользователяИБ, ИнформационнаяБаза.ПарольПользователяИБ);
			Исключение
				Отказ = Истина;
			КонецПопытки;
			
			Возврат АдминистрированиеИнформационнойБазы;	
		КонецЕсли;
	КонецЦикла;  
	
	Возврат Неопределено;

КонецФункции // ПолучитьСвойстваИнформационнойБазы()

