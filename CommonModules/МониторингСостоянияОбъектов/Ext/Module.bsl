// @strict-types


#Область ПрограммныйИнтерфейс

Процедура ПроверитьАктуальностьЗарегистрированныхБаз(Кластер, ИдентификаторыБаз) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				|	ИнформационныеБазы.Ссылка КАК ИнформационнаяБаза
				|ИЗ
				|	Справочник.ИнформационныеБазы КАК ИнформационныеБазы
				|ГДЕ
				|	НЕ ИнформационныеБазы.ИдентификаторБазы В (&ИдентификаторыБаз)
				|	И ИнформационныеБазы.Владелец = &Кластер1С";
	
	Запрос.УстановитьПараметр("Кластер1С",				Кластер);
	Запрос.УстановитьПараметр("ИдентификаторыБаз",	ИдентификаторыБаз);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Правило = Справочники.ПравилаПроверкиОбъектов.РегистрацияИнформационнойБазы;
	
	Пока Выборка.Следующий() Цикл
		ЗаписатьРезультатПроверки(Выборка.ИнформационнаяБаза, Правило);		
	КонецЦикла;
		
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс


// Записать результат проверки.
// 
// Параметры:
//  Объект - СправочникСсылка.Кластеры1С  
//			 - СправочникСсылка.ИнформационныеБазы
//  		 - 	СправочникСсылка.СерверыБД
//  		 - 	СправочникСсылка.ПользователиИБ
//  		 - 	СправочникСсылка.ВебСерверы
//  		 - 	СправочникСсылка.ХранилищаКонфигураций - Объект информацио о проверке которого записывается
//  		 
//  Правило - СправочникСсылка.ПравилаПроверкиОбъектов - Правило
Процедура ЗаписатьРезультатПроверки(Объект, Правило) Экспорт
	
	ЗаписьРегистра = РегистрыСведений.ПроверкиОбъектов.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Объект	= Объект;
	ЗаписьРегистра.Правило	= Правило;
	ЗаписьРегистра.Записать(Истина);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти
