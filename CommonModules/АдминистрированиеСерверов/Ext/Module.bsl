

Функция ПолучитьАгентаАдминистрированияКластера(ПараметрыПодключения, Отказ = Ложь) Экспорт
	
	Попытка
		АгентАдминистрирования = Новый АдминистрированиеСервера(ПараметрыПодключения.АдресСервераАдминистрирования,
														ПараметрыПодключения.ПортСервераАдминистрирования);
	Исключение
		ЗаписьЖурналаРегистрации("ПодключениеКСерверуАдминистрирования", 
								УровеньЖурналаРегистрации.Ошибка, 
								, 
								ПараметрыПодключения.АдресСервераАдминистрирования, 
								ОписаниеОшибки());	
		
		Правило = Справочники.ПравилаПроверкиОбъектов.ДоступностьСервераАдминистрированияКластера;								
		ПроверкаСостоянияОбъектов.ЗаписатьРезультатПроверки(ПараметрыПодключения.Ссылка, Правило);							
	КонецПопытки;	
		
	Попытка
		АгентАдминистрирования.ВыполнитьАутентификацию(ПараметрыПодключения.ПользовательЦентральногоСервер,
													ПараметрыПодключения.ПарольЦентральногоСервера);
	Исключение
		Отказ = Истина;
		Правило = Справочники.ПравилаПроверкиОбъектов.ДоступностьСервераАдминистрированияКластера;								
		ПроверкаСостоянияОбъектов.ЗаписатьРезультатПроверки(ПараметрыПодключения.Ссылка, Правило);
	КонецПопытки;
	
	Возврат АгентАдминистрирования;
	
КонецФункции

Функция ПолучитьПараметрыКластера(Кластер) Экспорт
	
	АгентАдминистрирования = ПолучитьАгентаАдминистрированияКластера(Кластер);
	
	СтруктураПараметров = Новый Структура;
	Попытка
		СтруктураПараметров.Вставить("ВерсияПлатформы", АгентАдминистрирования.ПолучитьВерсию());
	Исключение
		СтруктураПараметров.Вставить("ВерсияПлатформы", "");
	КонецПопытки;
	
	МассивКласеторов = АгентАдминистрирования.ПолучитьКластеры();
	Если МассивКласеторов.Количество() = 1 Тогда
		ЭлементМассиваКластеров = МассивКласеторов[0];
		
		ЭлементМассиваКластеров.ВыполнитьАутентификацию(Кластер.ИмяАдминистратораКластера, Кластер.ПарольАдминистратораКластера);
		
		СтруктураПараметров.Вставить("ИмяКомпьютера",		ЭлементМассиваКластеров.ИмяКомпьютера);
		СтруктураПараметров.Вставить("Имя",					ЭлементМассиваКластеров.Имя);
		СтруктураПараметров.Вставить("ИдентификаторКластера",	ЭлементМассиваКластеров.ИдентификаторКластера); 
		СтруктураПараметров.Вставить("Порт",					ЭлементМассиваКластеров.Порт);
		СтруктураПараметров.Вставить("ИнформационныеБазы",	ЭлементМассиваКластеров.ПолучитьИнформационныеБазы());
	Иначе
		СтруктураПараметров.Вставить("МассивКласеторов", МассивКласеторов);
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПолучитьАдиминистрированиеКластера(Кластер, Отказ = Ложь) Экспорт
	
	АгентАдминистрирования = ПолучитьАгентаАдминистрированияКластера(Кластер, Отказ);
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МассивКластеров = АгентАдминистрирования.ПолучитьКластеры();
	Для Каждого ЭлементМассиваКластеров Из МассивКластеров Цикл
		Если ЭлементМассиваКластеров.ИдентификаторКластера = Кластер.ИдентификаторКластера Тогда
			Попытка
				ЭлементМассиваКластеров.ВыполнитьАутентификацию(Кластер.ИмяАдминистратораКластера,
															Кластер.ПарольАдминистратораКластера);
			Исключение
				Отказ = Истина;
			КонецПопытки;
			
			Возврат ЭлементМассиваКластеров;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьБазыКластера(Кластер) Экспорт
	
	ЭлементАдминистрированияКластера = ПолучитьАдиминистрированиеКластера(Кластер);
	Возврат ЭлементАдминистрированияКластера.ПолучитьИнформационныеБазы();
	
КонецФункции

Функция ПолучитьРабочиеСерверыКластера(Кластер) Экспорт
	
	ЭлементАдминистрированияКластера = ПолучитьАдиминистрированиеКластера(Кластер);
	Возврат ЭлементАдминистрированияКластера.ПолучитьРабочиеСерверы();
	
КонецФункции

