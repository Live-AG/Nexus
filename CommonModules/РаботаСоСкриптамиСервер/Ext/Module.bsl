	
Функция ПолучитьПутьКФайлуПрограммы() Экспорт

	ПараметрыСистемы = Новый СистемнаяИнформация;                    
	
	Если ПараметрыСистемы.ТипПлатформы = ТипПлатформы.Windows_x86 
		Или ПараметрыСистемы.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		ПутьКФайлуПрограммы = "C:\Program Files\1cv8\common\1cestart.exe";
	Иначе
		ПутьКФайлуПрограммы = "/opt/1cv8/common/1cestart";
	КонецЕсли;
	
	Возврат ПутьКФайлуПрограммы;
	
КонецФункции
	
Функция ПолучитьСопоставлениеРеквизитовИПараметров()
	
	СоответствиеПараметров = Новый Соответствие;
	СоответствиеПараметров.Вставить("АдресСервераАдминистрирования",	"agnServerName");	СоответствиеПараметров.Вставить("ПортСервераАдминистрирования",	"agnServerPort");	СоответствиеПараметров.Вставить("ПользовательЦентральногоСервер",	"agnServerUser");	СоответствиеПараметров.Вставить("ПарольЦентральногоСервера",		"agnServerUserPassword");   
		СоответствиеПараметров.Вставить("СерверБД",						"dbServerName");	СоответствиеПараметров.Вставить("БазаДанных",					"dbName");	СоответствиеПараметров.Вставить("ИмяАдминистратораСУБД",			"dbUser");	СоответствиеПараметров.Вставить("ПарольАдминистратораСУБД",		"dbUserPassword"); 
		СоответствиеПараметров.Вставить("АдресКластера",					"ibServerName");	СоответствиеПараметров.Вставить("ПортКластера",					"ibServerPort");	СоответствиеПараметров.Вставить("ИмяИБ",						"ibName");	СоответствиеПараметров.Вставить("ИмяПользователяИБ",				"ibUser");	СоответствиеПараметров.Вставить("ПарольПользователяИБ",			"ibUserPassword");   
		СоответствиеПараметров.Вставить("ПутьКХранилищуКонфигурации",		"crPath");	СоответствиеПараметров.Вставить("ИмяПользователяХК",				"crUser");	СоответствиеПараметров.Вставить("ПарольПользователяХК",			"crUserPassword");   
		СоответствиеПараметров.Вставить("ПутьКФайлуПрограммы",			"PrgPath");	СоответствиеПараметров.Вставить("РежимЗапускаПриложения",		"PrgMode"); 
	
	СоответствиеПараметров.Вставить("ПутьКВременномуКаталогу",		"TmpPath");
	
	Возврат СоответствиеПараметров;
	
КонецФункции 

Функция ПолучитьПараметрыИнформационнойБазы(ИнформационнаяБаза)
	
	СоответствиеПараметров = ПолучитьСопоставлениеРеквизитовИПараметров();
	СтруктураПарметров = Новый Структура;    
	
	Для Каждого Параметр Из СоответствиеПараметров Цикл
		СтруктураПарметров.Вставить(Параметр.Ключ, "");		
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИнформационныеБазы.Владелец.АдресСервераАдминистрирования КАК АдресСервераАдминистрирования,
	               |	ИнформационныеБазы.Владелец.ПортСервераАдминистрирования КАК ПортСервераАдминистрирования,
	               |	ИнформационныеБазы.Владелец.ПользовательЦентральногоСервер КАК ПользовательЦентральногоСервер,
	               |	ИнформационныеБазы.Владелец.ПарольЦентральногоСервера КАК ПарольЦентральногоСервера,
	               |	ИнформационныеБазы.СерверБД.ИмяСервера КАК СерверБД,
	               |	ИнформационныеБазы.БазаДанных КАК БазаДанных,
	               |	ИнформационныеБазы.СерверБД.ИмяАдминистратораСУБД КАК ИмяАдминистратораСУБД,
	               |	ИнформационныеБазы.СерверБД.ПарольАдминистратораСУБД КАК ПарольАдминистратораСУБД,
	               |	ИнформационныеБазы.Владелец.АдресКластера КАК АдресКластера,
	               |	ИнформационныеБазы.Владелец.ПортКластера КАК ПортКластера,
	               |	ИнформационныеБазы.ИмяИБ КАК ИмяИБ,
	               |	ИнформационныеБазы.ИмяПользователяИБ КАК ИмяПользователяИБ,
	               |	ИнформационныеБазы.ПарольПользователяИБ КАК ПарольПользователяИБ,
	               |	ИнформационныеБазы.ХранилищеКонфигурации.ПутьКХранилищуКонфигурации КАК ПутьКХранилищуКонфигурации,
	               |	ИнформационныеБазы.ИдентификаторБазы КАК ИдентификаторБазы
	               |ИЗ
	               |	Справочник.ИнформационныеБазы КАК ИнформационныеБазы
	               |ГДЕ
	               |	ИнформационныеБазы.Ссылка = &ИнформационнаяБаза";
	
	Запрос.УстановитьПараметр("ИнформационнаяБаза", ИнформационнаяБаза);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(СтруктураПарметров, Выборка);
	СтруктураПарметров.ПортКластера = Формат(СтруктураПарметров.ПортКластера, "ЧГ=0");
	
	Возврат СтруктураПарметров;
	
КонецФункции
		   
Функция ПолучитьСтрокуСоединенияСБазой(ИнформационнаяБаза, РежимЗапускаПриложения = "DESIGNER") Экспорт
	
	//#TODO Если имя и/или пароль пользователя не заданы то их не следует включать в строку соединения
	
	ТекстСкрипта = "%PrgPath% %PrgMode% /S%ibServerName%:%ibServerPort%\%ibName% /N""%ibUser%"" /P""%ibUserPassword%""";			
	
	ПараметрыКонтекста = ПолучитьПараметрыИнформационнойБазы(ИнформационнаяБаза);
	
	ПутьКФайлуПрограммы = ПолучитьПутьКФайлуПрограммы();
	
	ПараметрыКонтекста.Вставить("ПутьКФайлуПрограммы",		ПутьКФайлуПрограммы);
	ПараметрыКонтекста.Вставить("РежимЗапускаПриложения",	РежимЗапускаПриложения);
	
	СтрокаПодключения = ЗаполнитьПараметрыСкрипта(ТекстСкрипта, ПараметрыКонтекста);
	
	Возврат СтрокаПодключения;

КонецФункции // ПолучитьСтрокуСоединенияСБазой()


Функция ЗаполнитьПараметрыСкрипта(ТекстСкрипта, Параметры) Экспорт
	
	СоответствиеПараметров = ПолучитьСопоставлениеРеквизитовИПараметров();  
	
	Для Каждого Параметр Из Параметры Цикл
		ТекстСкрипта = СтрЗаменить(ТекстСкрипта, "%" + СоответствиеПараметров[Параметр.Ключ] + "%", Параметр.Значение);	
	КонецЦикла;  
	
	Возврат ТекстСкрипта;
	
КонецФункции




Процедура ВыполнитьСкрипт(Скрипт, Контекст) Экспорт

	Для Каждого СтрокаКонетекста Из Скрипт.КонтекстВыполнения Цикл   
		Если СтрокаКонетекста.Использование Тогда
			
			Если СтрокаКонетекста.ЭлементКонтекста = ПланыВидовХарактеристик.КонтекстВыполненияСкрипта.ИнформационнаяБаза Тогда
			
	//#TODO ПолучениеПараметров				
				
			
			КонецЕсли;
						
		КонецЕсли;
	КонецЦикла;		
		
КонецПроцедуры 


