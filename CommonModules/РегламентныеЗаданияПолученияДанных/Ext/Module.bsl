
#Область ОбработчикиРегламентныхЗаданий

Процедура СобратьСтатистикуИспользованияИнформационныхБаз() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				|	Кластеры1С.Ссылка КАК Кластер
				|ИЗ
				|	Справочник.Кластеры1С КАК Кластеры1С
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеЗаданияОбъектов КАК ТекущиеЗаданияОбъектов
				|		ПО (ТекущиеЗаданияОбъектов.ИсточникЗадания = Кластеры1С.Ссылка)
				|ГДЕ
				|	ТекущиеЗаданияОбъектов.ИсточникЗадания ЕСТЬ NULL
				|	И Кластеры1С.Активен";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТаблицаСеансов = АдминистрированиеСеансов.ПолучитьТаблицуАктивныхСеансовКластера(Выборка.Кластер);
		Если ТаблицаСеансов.Количество() > 0 Тогда
			ЗаписатьТаблицуВРегистр(ТаблицаСеансов);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СверткаРегистровСбораСтатистики() Экспорт

	ОбрезкаРегистраСтатистикаИспользованияБаз();
	
КонецПроцедуры 

#КонецОбласти	


#Область ВспомогательныеПроцедурыИФункции

Процедура ЗаписатьТаблицуВРегистр(ТаблицаСеансов)
	
	//#TODO Обработать следующие ИмяПриложения:
	//1CV8 - идентификатор приложения "1С:Предприятие";
	//1CV8C - идентификатор приложения тонкого клиента "1С:Предприятие";
	//AgentStandardCall – стандартный вызов;
	//AnalyticsSystemClient - клиент системы аналитики;
	//AnalyticsSystemQuery - служебный вызов системы аналитики;
	//BackgroundJob - идентификатор сессии обработки заданий;
	//COMConnection - идентификатор сессии внешнего соединения 1С:Предприятия через COM;
	//COMConsole - идентификатор административной сессии внешнего соединения;
	//Debugger - идентификатор сессии отладчика;
	//DebugQueryTargets - идентификатор приложения для IDE-отладчика по TCP - запрос состава предметов отладки;
	//Designer - идентификатор приложения Конфигуратор;
	//HTTPServiceConnection - идентификатор сессии http-сервиса;
	//ImplAppID - идентификатор приложения для временного сеанса;
	//JobScheduler - идентификатор сессии планировщика заданий;
	//MobileClient - идентификатор приложения мобильного клиента "1С:Предприятие";
	//ODataConnection - идентификатор сессии OData-сервиса;
	//OpenIDProvider - идентификатор провайдера OpenID;
	//RAS - идентификатор сервера администрирования;
	//RemoteDebugger - идентификатор приложения для IDE-отладчика по TCP;
	//SrvrConsole - идентификатор сессии консоли кластера;
	//SystemBackgroundJob - идентификатор системного фонового задания;
	//WebClient - идентификатор приложения web-клиента 1С:Предприятие;
	//WebServerExtension - идентификатор приложения модуля расширения веб-сервера;
	//WSConnection - идентификатор сессии web-сервиса.
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаСеансов.ИдентификаторИнформационнойБазы КАК ИдентификаторИнформационнойБазы,
	               |	ТаблицаСеансов.ИдентификаторСеанса КАК ИдентификаторСеанса,
	               |	ТаблицаСеансов.ИмяПользователя КАК ИмяПользователя,
	               |	ТаблицаСеансов.ИмяПриложения КАК ИмяПриложения,
	               |	ТаблицаСеансов.ИмяКомпьютера КАК ИмяКомпьютера,
	               |	ТаблицаСеансов.IPАдресКлиента КАК IPАдресКлиента,
	               |	ТаблицаСеансов.ДлительностьВызововВсего КАК ДлительностьВызововВсего,
	               |	ТаблицаСеансов.ДлительностьВызововСервисовВсего КАК ДлительностьВызововСервисовВсего,
	               |	ТаблицаСеансов.ДлительностьВызововСУБДВсего КАК ДлительностьВызововСУБДВсего,
	               |	ТаблицаСеансов.КоличествоВызововВсего КАК КоличествоВызововВсего,
	               |	ТаблицаСеансов.ОбъемДанныхЗаписанныхНаДискВсего КАК ОбъемДанныхЗаписанныхНаДискВсего,
	               |	ТаблицаСеансов.ОбъемДанныхПереданныхИПолученныхСУБДВсего КАК ОбъемДанныхПереданныхИПолученныхСУБДВсего,
	               |	ТаблицаСеансов.ОбъемДанныхСчитанныхСДискаВсего КАК ОбъемДанныхСчитанныхСДискаВсего,
	               |	ТаблицаСеансов.ПотреблениеПамятиВсего КАК ПотреблениеПамятиВсего,
	               |	ТаблицаСеансов.ПроцессорноеВремяВсего КАК ПроцессорноеВремяВсего,
	               |	ТаблицаСеансов.ВремяНачала КАК ВремяНачала,
	               |	ТаблицаСеансов.ВремяПоследнейАктивности КАК ВремяПоследнейАктивности,
	               |	ТаблицаСеансов.СпящийСеанс КАК СпящийСеанс,
	               |	ТаблицаСеансов.АктивныйСеансПользователя КАК АктивныйСеансПользователя
	               |ПОМЕСТИТЬ ВТ_Сеансы
	               |ИЗ
	               |	&ТаблицаСеансов КАК ТаблицаСеансов
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ИдентификаторИнформационнойБазы,
	               |	ИмяПользователя,
	               |	АктивныйСеансПользователя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&ТекущаяДата КАК Период,
	               |	ИнформационныеБазы.Ссылка КАК ИнформационнаяБаза,
	               |	ПользователиИБ.Ссылка КАК ПользовательИБ,
	               |	СУММА(ВЫБОР
	               |			КОГДА ПользователиИБ.Ссылка = ЗНАЧЕНИЕ(Справочник.ПользователиИБ.DefUser)
	               |					ИЛИ ВТ_Сеансы.СпящийСеанс
	               |				ТОГДА 0
	               |			ИНАЧЕ 1
	               |		КОНЕЦ) КАК КоличествоАктивныхСеансов,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВТ_Сеансы.СпящийСеанс = ИСТИНА
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КоличествоСпящихСеансов
	               |ИЗ
	               |	ВТ_Сеансы КАК ВТ_Сеансы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПользователиИБ КАК ПользователиИБ
	               |		ПО ВТ_Сеансы.ИмяПользователя = ПользователиИБ.Наименование
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИнформационныеБазы КАК ИнформационныеБазы
	               |		ПО ВТ_Сеансы.ИдентификаторИнформационнойБазы = ИнформационныеБазы.ИдентификаторБазы
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ИнформационныеБазы.Ссылка,
	               |	ПользователиИБ.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Сеансы.ИдентификаторСеанса КАК ИдентификаторСеанса,
	               |	ПользователиИБ.Ссылка КАК ПользовательИБ,
	               |	ИнформационныеБазы.Ссылка КАК ИнформационнаяБаза,
	               |	ВТ_Сеансы.ВремяНачала КАК ВремяНачала,
	               |	ВТ_Сеансы.ВремяПоследнейАктивности КАК ВремяПоследнейАктивности,
	               |	ВТ_Сеансы.ДлительностьВызововВсего КАК ДлительностьВызововВсего,
	               |	ВТ_Сеансы.ДлительностьВызововСервисовВсего КАК ДлительностьВызововСервисовВсего,
	               |	ВТ_Сеансы.ДлительностьВызововСУБДВсего КАК ДлительностьВызововСУБДВсего,
	               |	ВТ_Сеансы.КоличествоВызововВсего КАК КоличествоВызововВсего,
	               |	ВТ_Сеансы.ОбъемДанныхЗаписанныхНаДискВсего КАК ОбъемДанныхЗаписанныхНаДискВсего,
	               |	ВТ_Сеансы.ОбъемДанныхПереданныхИПолученныхСУБДВсего КАК ОбъемДанныхПереданныхИПолученныхСУБДВсего,
	               |	ВТ_Сеансы.ОбъемДанныхСчитанныхСДискаВсего КАК ОбъемДанныхСчитанныхСДискаВсего,
	               |	ВТ_Сеансы.ПотреблениеПамятиВсего КАК ПотреблениеПамятиВсего,
	               |	ВТ_Сеансы.ПроцессорноеВремяВсего КАК ПроцессорноеВремяВсего,
	               |	ВТ_Сеансы.ИмяПриложения КАК ИмяПриложения,
	               |	ВТ_Сеансы.ИмяКомпьютера КАК ИмяКомпьютера,
	               |	ВТ_Сеансы.IPАдресКлиента КАК IPАдресКлиента
	               |ИЗ
	               |	ВТ_Сеансы КАК ВТ_Сеансы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПользователиИБ КАК ПользователиИБ
	               |		ПО ВТ_Сеансы.ИмяПользователя = ПользователиИБ.Наименование
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИнформационныеБазы КАК ИнформационныеБазы
	               |		ПО ВТ_Сеансы.ИдентификаторИнформационнойБазы = ИнформационныеБазы.ИдентификаторБазы
	               |ГДЕ
	               |	ВТ_Сеансы.АктивныйСеансПользователя = ИСТИНА
	               |	И ПользователиИБ.Ссылка <> ЗНАЧЕНИЕ(Справочник.ПользователиИБ.DefUser)";
	
	Запрос.УстановитьПараметр("ТаблицаСеансов",	ТаблицаСеансов);
	Запрос.УстановитьПараметр("ТекущаяДата",	ТекущаяДата);
	
	Результат = Запрос.ВыполнитьПакет();
	НаборЗаписейСтатистики = РегистрыСведений.СтатистикаИспользованияИнформационныхБаз.СоздатьНаборЗаписей();
	НаборЗаписейСтатистики.Загрузить(Результат[1].Выгрузить());
	
	НаборЗаписейСтатистики.Записать(Ложь);   
	
	ВыборкаСеансов = Результат[2].Выбрать();   
	НачатьТранзакцию();
	Пока ВыборкаСеансов.Следующий() Цикл
		ЗаписьСеансаПользователя = РегистрыСведений.СеансыПользователей.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(ЗаписьСеансаПользователя, ВыборкаСеансов);
		ЗаписьСеансаПользователя.Записать();
	КонецЦикла; 
	
	Попытка
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;

КонецПроцедуры

Процедура ОбрезкаРегистраСтатистикаИспользованияБаз()
	
	КоличествоДней = 3; //#TODO Сделать настройку
	
	СекундВСутках = 24*60*60;
	ПериодДанных = НачалоДня(ТекущаяДата() - КоличествоДней * СекундВСутках);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				|	СтатистикаИспользованияИнформационныхБаз.Период КАК Период,
				|	СтатистикаИспользованияИнформационныхБаз.ИнформационнаяБаза КАК ИнформационнаяБаза,
				|	СтатистикаИспользованияИнформационныхБаз.ПользовательИБ КАК ПользовательИБ,
				|	СтатистикаИспользованияИнформационныхБаз.КоличествоАктивныхСеансов КАК КоличествоАктивныхСеансов,
				|	СтатистикаИспользованияИнформационныхБаз.КоличествоСпящихСеансов КАК КоличествоСпящихСеансов
				|ИЗ
				|	РегистрСведений.СтатистикаИспользованияИнформационныхБаз КАК СтатистикаИспользованияИнформационныхБаз
				|ГДЕ
				|	СтатистикаИспользованияИнформационныхБаз.Период < &ПериодДанных";
	
	Запрос.УстановитьПараметр("Период", ПериодДанных);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Не Результат.Пустой()Тогда
		НаборОчищаемыхЗаписей = РегистрыСведений.СтатистикаИспользованияИнформационныхБаз.СоздатьНаборЗаписей();
		НаборОчищаемыхЗаписей.Загрузить(Результат.Выгрузить());
		НаборОчищаемыхЗаписей.Прочитать();
		НаборОчищаемыхЗаписей.Очистить();
		НаборОчищаемыхЗаписей.Записать();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
